<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Code Life]]></title>
  <link href="http://blog.code-life.net/atom.xml" rel="self"/>
  <link href="http://blog.code-life.net/"/>
  <updated>2014-09-21T15:51:24+09:00</updated>
  <id>http://blog.code-life.net/</id>
  <author>
    <name><![CDATA[noto]]></name>
    <email><![CDATA[noto.code.life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MacアプリCaffeineのメニューバーアイコンをRetinaディスプレイ用に変更する]]></title>
    <link href="http://blog.code-life.net/blog/2014/09/21/mac-retina-caffeine-icon/"/>
    <updated>2014-09-21T14:33:34+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/09/21/mac-retina-caffeine-icon</id>
    <content type="html"><![CDATA[<p><a href="http://lightheadsw.com/caffeine/">Caffeine</a>は、Macのスリープモードを一時的に無効にするMacの定番アプリです。</p>

<p>起動するとメニューバーにコーヒーカップのアイコンが表示され、クリックすると無効化のON・OFFを切り替えます。</p>

<p>とてもシンプルな機能で重宝していますが一つ不満があります。</p>

<p>アイコンがダサい・・・。</p>

<p><img src="http://blog.code-life.net/images/2014/09/mac-caffeine-1.png"></p>

<!--more-->


<h2>Caffeineのアイコンを変更する</h2>

<p>Retinaディスプレイ対応 &amp; シャレオツなアイコンに変えました。</p>

<h3>アイコンセットをダウンロード</h3>

<p>3つ紹介しますが、探せばもっとあるかもしれません。ちなみに私は「1」を使用しました。</p>

<ol>
<li><a href="https://github.com/bkenny/retina-caffeine">bkenny/retina-caffeine</a></li>
<li><a href="https://webjac.com/design/caffeine-retina-icons/">Caffeine Retina Icons</a></li>
<li><a href="http://blog.timlockridge.com/blog/2013/04/26/retina-menu-bar-icons-for-caffeine/">Retina Menu Bar Icons for Caffeine</a></li>
</ol>


<h3>アイコンの置き換え</h3>

<ol>
<li>/Applications/Caffeine.appを<code>Ctrl + クリック</code>して<code>パッケージの内容を表示</code>を選択</li>
<li>Contents/Resources内に置き換えたいアイコンをコピー</li>
<li>(起動している場合)Caffeineを終了し、Caffeineを起動</li>
</ol>


<h3>結果</h3>

<p>いい感じ。</p>

<p><img src="http://blog.code-life.net/images/2014/09/mac-caffeine-2.png"></p>

<h2>注意</h2>

<p>Caffeine自体のアップデートがあった場合、アイコンがデフォルト状態に戻ります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac メニューバーにカレンダーを表示させるDay-Oが便利]]></title>
    <link href="http://blog.code-life.net/blog/2014/09/07/mac-day-o/"/>
    <updated>2014-09-07T22:11:08+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/09/07/mac-day-o</id>
    <content type="html"><![CDATA[<p>しばらく前から<a href="http://shauninman.com/archive/2011/10/20/day_o_mac_menu_bar_clock">Day-O</a>を利用している。 メニューバーからカレンダーが確認できてなかなか便利。</p>

<!--more-->


<p><img src="http://blog.code-life.net/images/2014/09/mac-day-o-1.png"></p>

<p>日付をクリックすると以下のような表示となる。</p>

<p><img src="http://blog.code-life.net/images/2014/09/mac-day-o-2.png"></p>

<p><code>Preference</code>から日付のフォーマットを変更することもできる。</p>

<p>デフォルトの日付&amp;時刻と別にDay-Oの表示がされていたのでデフォルトはOFFに、またカレンダーを確認するだけに利用してたDashboardも<a href="http://www.bresink.com/osx/TinkerTool.html">TinkerTool</a>で無効にしている。</p>

<p><a href="http://shauninman.com/archive/2011/10/20/day_o_mac_menu_bar_clock">Download Day-O</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH agent forwardingまとめ]]></title>
    <link href="http://blog.code-life.net/blog/2014/09/07/ssh-agent-forwarding/"/>
    <updated>2014-09-07T19:24:56+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/09/07/ssh-agent-forwarding</id>
    <content type="html"><![CDATA[<p>Capistranoを触った際にagent forwardingについて調べたことをまとめておく。</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>MacOS X 10.9 (ローカル)</li>
<li>CentOS 6.5 (リモート)</li>
</ul>


<h2>SSH agent forwardingとは</h2>

<p>ローカルからサーバA サーバAからサーバBへSSH接続したい場合、サーバAに秘密鍵を置かずローカルの鍵を参照して認証させる仕組み。</p>

<p>例えば以下のようなことができる。</p>

<ul>
<li>ローカルからサーバAにログイン後、サーバBにログイン</li>
<li>ローカルからサーバAにログイン後、サーバBとファイル同期(rsync)する</li>
<li>ローカルからサーバAにログイン後、git cloneを行う</li>
</ul>


<h2>SSH agent forwardingの設定</h2>

<p>agent forwardingを利用するためにはいくつか条件がある。</p>

<h3>ローカルの条件</h3>

<p>ssh-agentが起動していること。また秘密鍵がssh-agentに登録されていること。</p>

<p>秘密鍵を登録しなければ、参照する鍵がない為SSH接続時にエラーとなる。</p>

<h4>ssh-agentの起動確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ echo "$SSH_AUTH_SOCK"
</span><span class='line'>/tmp/launch-5XHwDO/Listeners</span></code></pre></td></tr></table></div></figure>


<h4>秘密鍵を登録</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add path_to_key</span></code></pre></td></tr></table></div></figure>


<p>再起動後でもssh-agentに鍵を登録させていたい場合は<code>K</code>オプションを利用する</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add -K path_to_key</span></code></pre></td></tr></table></div></figure>


<h4>登録されている秘密鍵を確認</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-add -L</span></code></pre></td></tr></table></div></figure>


<h3>リモートの条件</h3>

<p>AgentForwardingが許可されていること。
<code>sshd_config</code>内の<code>AllowAgentForwarding</code>の値を確認。</p>

<h2>実際にやってみる</h2>

<p>ssh-agentの転送を許可するには<code>A</code>オプションを利用する</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh -A exsample.com</span></code></pre></td></tr></table></div></figure>


<p>毎回オプション指定するのが面倒な場合は<code>~/.ssh/config</code>に<code>ForwardAgent</code>を追加する。</p>

<figure class='code'><figcaption><span>~/.ssh/config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Host exsample.com
</span><span class='line'>  ForwardAgent yes
</span></code></pre></td></tr></table></div></figure>


<p><code>sudo</code> または <code>su</code> 後、転送した鍵情報を利用することができない場合がある。</p>

<p> suの場合、<code>m</code>, <code>p</code>, <code>preserve-environment</code>オプションを利用することで鍵情報を引き継ぐことができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ su -p
</span></code></pre></td></tr></table></div></figure>


<p>sudoの場合、<code>E</code>オプションを利用する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ sudo -E
</span></code></pre></td></tr></table></div></figure>


<p>データを転送したい時やデプロイする時に使えて便利。</p>

<h2>参考</h2>

<ul>
<li><a href="https://developer.github.com/guides/using-ssh-agent-forwarding/">Using SSH agent forwarding</a></li>
<li><a href="http://www.unixuser.org/~euske/doc/openssh/jman/ssh.html">ssh</a></li>
<li><a href="http://linuxjm.sourceforge.jp/html/gnumaniak/man1/su.1.html#index">su</a></li>
<li><a href="http://linuxjm.sourceforge.jp/html/sudo/man8/sudo.8.html">sudo</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CakePHP2.x クエリーログを取得する]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/29/how-to-get-query-log-in-cakephp2/"/>
    <updated>2014-08-29T10:58:40+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/29/how-to-get-query-log-in-cakephp2</id>
    <content type="html"><![CDATA[<p>どんなクエリが発行されているか確認したい場合があった際のメモ</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>CakePHP 2.5.2</li>
<li>MySQL 5.5.30</li>
</ul>


<h2>注意</h2>

<p>この方法でクエリーログが取得できるのはデバッグレベル2の場合のみ</p>

<h2>クエリーログを取得する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$log</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="p">{</span><span class="nv">$Model</span><span class="p">}</span><span class="o">-&gt;</span><span class="na">getDataSource</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getLog</span><span class="p">(</span><span class="k">false</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>第１引数は、ソートの有無。trueの場合はtook(ms)で降順ソート</li>
<li>第2引数では、クエリーを格納している変数の初期化を行うか否か</li>
</ul>


<h3>返却値</h3>

<p>以下のデータ構造で返却される。</p>

<figure class='code'><figcaption><span>sample value</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">Array</span>
</span><span class='line'><span class="p">(</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">log</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
</span><span class='line'>        <span class="p">(</span>
</span><span class='line'>            <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
</span><span class='line'>                <span class="p">(</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">query</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">SELECT</span> <span class="sb">`username`</span> <span class="nx">FROM</span> <span class="sb">`users`</span>  <span class="k">AS</span> <span class="sb">`User`</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">params</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
</span><span class='line'>                        <span class="p">(</span>
</span><span class='line'>                        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="p">[</span><span class="nx">affected</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">numRows</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">took</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>                <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
</span><span class='line'>                <span class="p">(</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">query</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="nx">SELECT</span> <span class="sb">`name`</span> <span class="nx">FROM</span> <span class="sb">`groups`</span>  <span class="k">AS</span> <span class="sb">`Group`</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">params</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="k">Array</span>
</span><span class='line'>                        <span class="p">(</span>
</span><span class='line'>                        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                    <span class="p">[</span><span class="nx">affected</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">numRows</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>                    <span class="p">[</span><span class="nx">took</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">0</span>
</span><span class='line'>                <span class="p">)</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">count</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">2</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">time</span><span class="p">]</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>getLog</code>が行っている処理内容</p>

<figure class='code'><figcaption><span>lib/Cake/Model/Datasource/DboSource.php</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * Get the query log as an array.</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param boolean $sorted Get the queries sorted by time taken, defaults to false.</span>
</span><span class='line'><span class="sd"> * @param boolean $clear If True the existing log will cleared.</span>
</span><span class='line'><span class="sd"> * @return array Array of queries run as an array</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">getLog</span><span class="p">(</span><span class="nv">$sorted</span> <span class="o">=</span> <span class="k">false</span><span class="p">,</span> <span class="nv">$clear</span> <span class="o">=</span> <span class="k">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$sorted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$log</span> <span class="o">=</span> <span class="nx">sortByKey</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_queriesLog</span><span class="p">,</span> <span class="s1">&#39;took&#39;</span><span class="p">,</span> <span class="s1">&#39;desc&#39;</span><span class="p">,</span> <span class="nx">SORT_NUMERIC</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$log</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_queriesLog</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$clear</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_queriesLog</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;log&#39;</span> <span class="o">=&gt;</span> <span class="nv">$log</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_queriesCnt</span><span class="p">,</span> <span class="s1">&#39;time&#39;</span> <span class="o">=&gt;</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">_queriesTime</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLWorkbench テーブル毎にストレージエンジンを変更する]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/28/how-to-change-storage-engine-mysql-work-bench/"/>
    <updated>2014-08-28T18:24:52+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/28/how-to-change-storage-engine-mysql-work-bench</id>
    <content type="html"><![CDATA[<p>いつからかテーブルのストレージエンジンの項目がどこにあるのか、とても分かりにくくなった。</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>MacOS X 10.9</li>
<li>MySQLWorkbench 6.1</li>
</ul>


<h2>テーブルのストレージエンジンを変更する</h2>

<p>テーブルの詳細を表示し</p>

<p><a href="http://blog.code-life.net/images/2014/08/mysql-work-bench-1.png"><img src="http://blog.code-life.net/images/2014/08/mysql-work-bench-1-500x121.png" width="500" height="121"></a></p>

<p>すると</p>

<p><a href="http://blog.code-life.net/images/2014/08/mysql-work-bench-2.png"><img src="http://blog.code-life.net/images/2014/08/mysql-work-bench-2-500x121.png" width="500" height="121"></a></p>

<p>ストレージエンジンのセレクトボックスが表示される。分りにくい。</p>

<h2>参考</h2>

<p><a href="http://stackoverflow.com/questions/10085203/mysql-workbench-eer-diagramm-how-to-change-storage-engine">MySQL Workbench EER Diagramm - how to change storage engine?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rsync sshポートを指定する]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/28/change-ssh-port-when-using-rsync/"/>
    <updated>2014-08-28T16:52:28+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/28/change-ssh-port-when-using-rsync</id>
    <content type="html"><![CDATA[<p>rsyncは一般的にはデフォルトでsshを利用するよう設定されているがeオプションで変更することができる。</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rsync -av -e 'ssh -p 10022' ~/path_to_local/files/ user@hostname:~/path_to_remote/files/</span></code></pre></td></tr></table></div></figure>


<p>eオプションでなく環境変数 <code>RSYNC_RSH</code> に設定しても同じことができる。</p>

<blockquote><p>You can also choose the remote shell program using the RSYNC_RSH environment variable,  which accepts the same range of values as -e.</p>

<p>引用元: <cite><a href="http://rsync.samba.org/ftp/rsync/rsync.html">rsync</a><cite></p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ export RSYNC_RSH="ssh -p 10022"
</span><span class='line'>$ rsync -av ~/path_to_local/files/ user@hostname:~/path_to_remote/files/</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<p><a href="http://rsync.samba.org/ftp/rsync/rsync.html">rsync</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux 新規ユーザーのホームディレクトリの雛形設定]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/27/linux-skelton-directory/"/>
    <updated>2014-08-27T17:54:17+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/27/linux-skelton-directory</id>
    <content type="html"><![CDATA[<p>useraddコマンドで新規ユーザーを作成するとホームディレクトリ内に下記のようないくつかの設定ファイルが既に存在している。</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>├── .bash_logout
</span><span class='line'>├── .bash_profile
</span><span class='line'>└── .bashrc</span></code></pre></td></tr></table></div></figure>


<p>これらのファイルは、<code>/etc/skel</code>内のファイルがコピーされたもので、<code>/etc/skel</code>内にファイルを追加、変更を行うと
新規ユーザーのホームディレクトリの雛形を作成することができる。</p>

<h2>雛形ディレクトリを変更する</h2>

<p>デフォルトでは<code>/etc/skel</code>だが、useraddの設定ファイル<code>/etc/default/useradd</code>に指定することで変更することができる。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /etc/default/useradd
</span><span class='line'>
</span><span class='line'># useradd defaults file
</span><span class='line'>GROUP=100
</span><span class='line'>HOME=/home
</span><span class='line'>INACTIVE=-1
</span><span class='line'>EXPIRE=
</span><span class='line'>SHELL=/bin/bash
</span><span class='line'>SKEL=/etc/skel ← ここを変える
</span><span class='line'>CREATE_MAIL_SPOOL=yes</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<p><a href="http://linuxg.net/the-unix-and-linux-skeleton-directory-etcskel/">The Unix and Linux skeleton directory: /etc/skel</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X Mavericks メニューバーに表示されているユーザー名を隠す]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/25/hide-user-name-from-menu-bar-in-mac-marvericks/"/>
    <updated>2014-08-25T14:57:41+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/25/hide-user-name-from-menu-bar-in-mac-marvericks</id>
    <content type="html"><![CDATA[<p>メニューバーに表示されるユーザー名は正直必要ないので非表示にしたい。</p>

<!--more-->


<h2>ユーザーとグループ</h2>

<p>システム環境設定からユーザーとグループを選択</p>

<h3>ログインオプションの選択</h3>

<p>ログインオプションを選択する。</p>

<p><a href="http://blog.code-life.net/images/2014/08/hide-user-name-from-menu-bar-in-mac-marvericks-1.png"><img src="http://blog.code-life.net/images/2014/08/hide-user-name-from-menu-bar-in-mac-marvericks-1.png" width="500" height="379"></a></p>

<h3>ファストユーザスイッチメニューの表示</h3>

<p>「ファストユーザスイッチメニューを表示」にチェックがはいっているので外す。</p>

<p><a href="http://blog.code-life.net/images/2014/08/hide-user-name-from-menu-bar-in-mac-marvericks-2.png"><img src="http://blog.code-life.net/images/2014/08/hide-user-name-from-menu-bar-in-mac-marvericks-2.png" width="500" height="379"></a></p>

<p>これでメニューバーのユーザー名は非表示となる。
<a href="http://evernote.com/intl/jp/skitch/">skitch</a>を使ってみたが便利だ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown code記法内でバッククォートを表示する]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/25/escape-backtick-in-markdown/"/>
    <updated>2014-08-25T00:38:47+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/25/escape-backtick-in-markdown</id>
    <content type="html"><![CDATA[<p>バッククォート文字を含めるには、複数のバッククォートで囲むことで表示することができる。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>`` `バッククォート`を表示する ``
</span><span class='line'>↓
</span><span class='line'>`バッククォート`を表示する
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<p><a href="http://daringfireball.net/projects/markdown/syntax#code">Markdown: Syntax</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress アルファベットで始まるタイトルの最初の文字が大文字となる]]></title>
    <link href="http://blog.code-life.net/blog/2014/08/24/uncapitalize-the-post-title-octopress/"/>
    <updated>2014-08-24T23:28:21+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/08/24/uncapitalize-the-post-title-octopress</id>
    <content type="html"><![CDATA[<p>ブログのタイトルを「octopress title」とした場合、実際表示されるタイトルは「Octopress title」となる。</p>

<p><code>_config.yml</code>の<code>titlecase</code>を<code>false</code>にすると記載したタイトルをそのまま表示させることができる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenv使うならこれもいれとけプラグイン4選]]></title>
    <link href="http://blog.code-life.net/blog/2014/05/07/recommended-rbenv-plugin/"/>
    <updated>2014-05-07T22:30:15+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/05/07/recommended-rbenv-plugin</id>
    <content type="html"><![CDATA[<p>複数バージョンのRubyを管理をするツールrbenvですが、rbenvをもう少し便利にしてくれるプラグインを紹介したいと思います。</p>

<!--more-->


<h2>ruby-build</h2>

<p><a href="https://github.com/sstephenson/ruby-build">ruby-build</a></p>

<h3>何するプラグイン?</h3>

<p>rubyのコンパイル &amp; インストール</p>

<h3>インストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</span></code></pre></td></tr></table></div></figure>


<h2>rbenv-default-gems</h2>

<p><a href="https://github.com/sstephenson/rbenv-default-gems">rbenv-default-gems</a></p>

<h3>何するプラグイン?</h3>

<p>新しくrubyをインストールする際、~/.rbenv/default-gemsに記載してあるgemを自動的にインストールする</p>

<figure class='code'><figcaption><span>ex) ~/.rbenv/default-gems</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundler
</span><span class='line'>pry
</span></code></pre></td></tr></table></div></figure>


<h3>Installation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems
</span></code></pre></td></tr></table></div></figure>


<h2>rbenv-gem-rehash</h2>

<p><a href="https://github.com/sstephenson/rbenv-gem-rehash">rbenv-gem-rehash</a></p>

<h3>何するプラグイン?</h3>

<p>gemをインストール or アンインストールした際に自動的にrbenv rehashを行う</p>

<h3>Installation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
</span></code></pre></td></tr></table></div></figure>


<h2>rbenv-update</h2>

<p><a href="https://github.com/rkh/rbenv-update">rbenv-update</a></p>

<h3>何するプラグイン?</h3>

<p><code>rbenv update</code>と打てば rbenv &amp; rbenvプラグインをまとめて最新の状態にする</p>

<h3>Installation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>git clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update
</span></code></pre></td></tr></table></div></figure>


<p>全部<a href="https://github.com/sstephenson/rbenv/wiki/Plugins#approved-plugins">wiki</a>に載ってるんすけどね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Vagrant]複数の共有ディレクトリをマウントさせる]]></title>
    <link href="http://blog.code-life.net/blog/2014/04/14/vagrant-multiple-synced-folders/"/>
    <updated>2014-04-14T21:06:31+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/04/14/vagrant-multiple-synced-folders</id>
    <content type="html"><![CDATA[<p>ドキュメントみてもgoogle先生に伺っても意外と情報がない。</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>Vagrant 1.5.2</li>
</ul>


<h2>複数の共有ディレクトリをマウントさせる</h2>

<p>ただ複数書けばいいだけだった&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;../path_to_share1&quot;</span><span class="p">,</span> <span class="s2">&quot;/share1&quot;</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;../path_to_share2&quot;</span><span class="p">,</span> <span class="s2">&quot;/share2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>常識なんですかね。</p>

<h2>参考</h2>

<p><a href="http://docs.vagrantup.com/v2/synced-folders/basic_usage.html">Synced Folders</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Server WEBrickの起動やレスポンス速度が遅い場合の対処法]]></title>
    <link href="http://blog.code-life.net/blog/2014/04/14/rails-server-webrick-is-so-slow/"/>
    <updated>2014-04-14T20:41:27+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/04/14/rails-server-webrick-is-so-slow</id>
    <content type="html"><![CDATA[<p>最近Railsを触っているのだが、いかんせんWebrickの起動やレスポンスが遅い。</p>

<p>世のRubyistはこんな環境で開発しているのか(いやない)ということで調べた。</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>Ruby on Rails4</li>
<li>ruby 2.1.1p76</li>
<li>Vagrant 1.5.2</li>
</ul>


<h2>Webrickの設定を見直す</h2>

<p>google先生に伺うと下記の解決方法が多かったがボクの環境では効果が見られなかった。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem which webrick
</span><span class='line'>/home/vagrant/.rbenv/versions/2.1.1/lib/ruby/2.1.0/webrick.rb
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>vi /home/vagrant/.rbenv/versions/2.1.1/lib/ruby/2.1.0/webrick/config.rb
</span><span class='line'>
</span><span class='line'>:DoNotReverseLookup <span class="o">=</span>&gt; nil
</span><span class='line'>↓
</span><span class='line'>:DoNotReverseLookup <span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Vagrant Synced Foldersの設定</h2>

<p>synced_folderを<code>nfs</code> にするとパフォーマンスの向上が期待できると何処かで見た記憶があったので</p>

<p>ドキュメントを覗いてみると <code>rsync</code> がバージョン1.5から利用できるとのこと。
使わない手はないと早速1.5に上げて試してみた。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s2">&quot;../target&quot;</span><span class="p">,</span> <span class="s2">&quot;/share&quot;</span><span class="p">,</span> <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;rsync&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>初回起動時は立ち上がるまで若干時間がかかったが、それ以降は遅いとは感じない。</p>

<p>肝心のWebrickのレスポンス速度は劇的に上がった。今までと比べると爆速。</p>

<h3>注意点</h3>

<p>ホストOS側で変更した点がゲストOSに反映されない。
rsyncを利用する場合は <code>rsync</code> または <code>rsync-auto</code> を実行する必要がある。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">up</span>
</span><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">rsync</span> <span class="c1">#１度きりの同期</span>
</span><span class='line'><span class="ow">or</span>
</span><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">rsync</span><span class="o">-</span><span class="n">auto</span> <span class="c1">#監視して変更があれば同期 若干タイムラグがある。</span>
</span></code></pre></td></tr></table></div></figure>


<h2>結局は&hellip;</h2>

<p>rsyncで少し利用してみたが、同期のラグが気になった。
変更してすぐに確認できないことがあるのでこの辺はストレスに感じる。</p>

<p>また同期は一方方向 ホスト→ ゲストの為、仮想マシン上でコマンドを打ってファイルを作成しても
ホストには反映されない。</p>

<p>自分はゲストからコマンドを打つことが多いので困った点だった。
こういった点はこれから改善されるのだと思う。</p>

<p>ということでパフォーマンス的に問題がなかったので <code>nfs</code> に変更して開発している。</p>

<hr />

<p>追記 2014/04/15</p>

<h2>参考</h2>

<p><a href="https://www.vagrantup.com/blog/feature-preview-vagrant-1-5-rsync.html">Feature Preview: Rsync Synced Folders</a></p>

<p><a href="http://docs.vagrantup.com/v2/getting-started/synced_folders.html">Synced Folders</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrantのコマンドを補完する]]></title>
    <link href="http://blog.code-life.net/blog/2014/02/07/install-vagrant-bash-completion-on-mac/"/>
    <updated>2014-02-07T11:19:47+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/02/07/install-vagrant-bash-completion-on-mac</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/kura/vagrant-bash-completion">vagrant-bash-completion</a>なるものを発見したのでインストールした。</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>Mac OS X 10.9.1</li>
<li>Vagrant 1.4.3</li>
</ul>


<h2>Installation</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>brew tap homebrew/completions
</span><span class='line'><span class="nv">$ </span>brew install vagrant-completion
</span></code></pre></td></tr></table></div></figure>


<p>~/.bashrcに以下を追加して反映</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if</span> <span class="o">[</span> -f <span class="sb">`</span>brew --prefix<span class="sb">`</span>/etc/bash_completion.d/vagrant <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">source</span> <span class="sb">`</span>brew --prefix<span class="sb">`</span>/etc/bash_completion.d/vagrant
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vagrantコマンド・サブコマンドの補完が行われて幸福度が少し上がる。</p>

<h2>参考</h2>

<p><a href="https://github.com/kura/vagrant-bash-completion">vagrant-bash-completion</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[IntelliJ] vim-easymotionぽいことができるAceJumpプラグインが便利]]></title>
    <link href="http://blog.code-life.net/blog/2014/01/06/using-vim-easymotion-in-intellij/"/>
    <updated>2014-01-06T23:21:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/01/06/using-vim-easymotion-in-intellij</id>
    <content type="html"><![CDATA[<p>IntelliJ IDEA 13がリリースされ先日UpgradeついでにPluginを整理していたところ、Acejumpなるプラグインを発見し便利だったって話。</p>

<p>なにができるかっていうとVimのプラグイン<a href="https://github.com/Lokaltog/vim-easymotion">easymotion</a>的なことができる。</p>

<p>ということでデモ。</p>

<!--more-->


<h2>Demo</h2>

<p>&ldquo;ctrl + ;&#8221;を入力、続けて任意の1文字を入力すると該当箇所にラベルが振られる。ハイライトされたアルファベットを入力するとその箇所に移動する。</p>

<p><img src="http://blog.code-life.net/images/2014/02/acejump.gif" width="600" height="400"></p>

<h2>Install</h2>

<p><code>Preferences</code> | <code>Plugins</code> | <code>Browse Repositories</code> | <code>AceJump</code> を選択しインストール</p>

<h2>Keymap</h2>

<p>キーマップが気に入らない場合は、</p>

<p><code>Preferences</code> | <code>Keymap</code> | <code>Plug-ins</code> | <code>AceJump</code> | <code>Ace Jump</code> から好きなキーマップを割り当てることができる。</p>

<p>AceJumpは WebStorm/PhpStorm, RubyMine, Pycharm等からも利用できるみたい。</p>

<h2>参考</h2>

<p><a href="http://johnlindquist.com/2012/08/14/ace_jump.html">ACE JUMP</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew undefined method `to_sym' for nil:NilClass]]></title>
    <link href="http://blog.code-life.net/blog/2014/01/06/homebrew-undefined-method-to-sym-for-nil-nilclass/"/>
    <updated>2014-01-06T22:40:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/01/06/homebrew-undefined-method-to-sym-for-nil-nilclass</id>
    <content type="html"><![CDATA[<p>brew updateをしたところ、下記のエラーが出力された。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Error: undefined method `to_sym' for nil:NilClass
</span><span class='line'>Please report this bug:
</span><span class='line'>    https://github.com/mxcl/homebrew/wiki/troubleshooting
</span><span class='line'>    /usr/local/Library/Homebrew/cmd/update.rb:111:in `report'
</span><span class='line'>    /usr/local/Library/Homebrew/cmd/update.rb:109:in `each_line'
</span><span class='line'>    /usr/local/Library/Homebrew/cmd/update.rb:109:in `report'
</span><span class='line'>    /usr/local/Library/Homebrew/cmd/update.rb:23:in `update'
</span><span class='line'>    /usr/local/Library/brew.rb:95:in `send'
</span><span class='line'>    /usr/local/Library/brew.rb:95</span></code></pre></td></tr></table></div></figure>


<p>もう一度 brew update を行えば問題なく更新された。
homebrewのバグだそう。</p>

<p>対象のhomebrewのバージョンは確認するの忘れた&hellip;</p>

<h2>参考</h2>

<p><a href="https://github.com/Homebrew/homebrew/issues/24286">undefined method `to_sym&#8217; for nil:NilClass</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Slim Framework]サブディレクトリにインストールした場合のリダイレクト方法]]></title>
    <link href="http://blog.code-life.net/blog/2014/01/06/redirecting-slim-application-from-subdirectory/"/>
    <updated>2014-01-06T22:07:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/01/06/redirecting-slim-application-from-subdirectory</id>
    <content type="html"><![CDATA[<p>簡単なWebアプリを作る機会があったので、PHPのマイクロフレームワークの一つである<a href="http://docs.slimframework.com">Slim Framework</a>を触ってみた。</p>

<p>そこでサブディレクトリにインストールした場合のリダイレクト方法で少しハマったので共有しておく。</p>

<!--more-->


<h2>環境</h2>

<p>Slim 2.4.0</p>

<h2>getRootUriを利用する</h2>

<p>Slim_Http_Request::getRootUriはサブディレクトリ名を返すのでそれを利用しリダイレクトを行う。</p>

<p>ex) サブディレクトリ名がslimの場合、「/slim」という文字列を返す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/index&#39;</span><span class="p">,</span>  <span class="k">function</span> <span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">request</span><span class="o">-&gt;</span><span class="na">getRootUri</span><span class="p">()</span> <span class="o">.</span> <span class="s1">&#39;/hoge&#39;</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>urlForを利用する</h2>

<p>Slimはrouteに任意の名前を割り当てることができ、urlForでURLを生成することができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/index&#39;</span><span class="p">,</span>  <span class="k">function</span> <span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;index.php&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">})</span><span class="o">-&gt;</span><span class="na">name</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/edit&#39;</span><span class="p">,</span>  <span class="k">function</span> <span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">redirect</span><span class="p">(</span><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">urlFor</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでインストール先がドキュメントルートだろうが、サブディレクトリだろうがコードを変える必要はなくなる。</p>

<h2>参考</h2>

<p><a href="http://docs.slimframework.com/#Route-Names">Slim Framework Documentation</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FFMpegでHttp Live Streaming(HLS)向けにセグメント化する]]></title>
    <link href="http://blog.code-life.net/blog/2013/12/19/segmenter-from-ffmpeg-for-http-live-streaming/"/>
    <updated>2013-12-19T22:45:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/12/19/segmenter-from-ffmpeg-for-http-live-streaming</id>
    <content type="html"><![CDATA[<p><a href="http://blog.code-life.net/blog/2013/04/14/how-to-install-m3u8-segmenter-on-centos/">CentOSにm3u8-segmenterをインストールする</a>がほんのちょっぴり人気なので、FFMpeg単体でもセグメントできるよって話です。</p>

<!--more-->


<h2>FFMpegでSegment化</h2>

<p>コンテンツは既に準備されているものとし、セグメント化のみ行います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ffmpeg -i sample.mp4 -acodec copy -vcodec copy <span class="se">\</span>
</span><span class='line'>  -vbsf h264_mp4toannexb <span class="se">\</span>
</span><span class='line'>  -map 0 <span class="se">\</span>
</span><span class='line'>  -f segment <span class="se">\</span>
</span><span class='line'>  -segment_format mpegts <span class="se">\</span>
</span><span class='line'>  -segment_time 5 <span class="se">\</span>
</span><span class='line'>  -segment_list playlist.m3u8 <span class="se">\</span>
</span><span class='line'>  -segment_list_flags -cache <span class="se">\</span>
</span><span class='line'>  stream_%d.ts
</span></code></pre></td></tr></table></div></figure>


<h3>オプションについて</h3>

<ul>
<li>-acodec copy -vcodec copy

<ul>
<li>コンテンツのコーデックをコピー。トランスコードは行われない。</li>
</ul>
</li>
<li>-segment_time

<ul>
<li>分割秒数の設定。5秒を設定したとしても５秒ジャストでセグメント化されるわけではない。</li>
</ul>
</li>
<li>-segment_list playlist.m3u8

<ul>
<li>プレイリストの出力先</li>
</ul>
</li>
<li>-segment_list_flags -cache

<ul>
<li>キャッシュ(#EXT-X-ALLOW-CACHE)の無効化。デフォルトでは有効。</li>
</ul>
</li>
</ul>


<p>iPhoneやAndroidで再生し挙動を確認をしましたが、FFMpeg内蔵のsegmenterはm3u8-segmenterより優秀ですね。</p>

<p>気が向いたらHLSの暗号化についても書こうかな。</p>

<h2>参考</h2>

<p><a href="http://rest-term.com/archives/3008/">NginxとFFmpegを利用したHTTP Live Streaming配信</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CentOS]システム情報(メモリ情報、バージョン、カーネルのバージョン、CPU情報)を確認する]]></title>
    <link href="http://blog.code-life.net/blog/2013/12/18/centos-linux-system-information/"/>
    <updated>2013-12-18T22:51:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/12/18/centos-linux-system-information</id>
    <content type="html"><![CDATA[<h2>メモリ情報の確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /proc/meminfo
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>MemTotal:        1020532 kB
</span><span class='line'>MemFree:          855980 kB
</span><span class='line'>Buffers:           36860 kB
</span><span class='line'>Cached:            59728 kB
</span><span class='line'>
</span><span class='line'>... 省略 ...
</span><span class='line'>
</span><span class='line'>HugePages_Free:        0
</span><span class='line'>HugePages_Rsvd:        0
</span><span class='line'>HugePages_Surp:        0
</span><span class='line'>Hugepagesize:       2048 kB
</span><span class='line'>DirectMap4k:        8128 kB
</span><span class='line'>DirectMap2M:     1040384 kB
</span></code></pre></td></tr></table></div></figure>


<h2>バージョン確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /etc/redhat-release
</span></code></pre></td></tr></table></div></figure>


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>CentOS release 6.4 (Final)
</span></code></pre></td></tr></table></div></figure>


<h2>カーネルのバージョン確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /proc/version
</span></code></pre></td></tr></table></div></figure>


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Linux version 2.6.32-358.2.1.el6.x86_64 (mockbuild@c6b8.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-3) (GCC) ) #1 SMP Wed Mar 13 00:26:49 UTC 2013
</span></code></pre></td></tr></table></div></figure>


<p>こっちでも確認できる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>uname -a
</span></code></pre></td></tr></table></div></figure>


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Linux localhost.localdomain 2.6.32-358.2.1.el6.x86_64 #1 SMP Wed Mar 13 00:26:49 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
</span></code></pre></td></tr></table></div></figure>


<h2>CPU情報の確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>cat /proc/cpuinfo
</span></code></pre></td></tr></table></div></figure>


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>processor   : 0
</span><span class='line'>vendor_id   : GenuineIntel
</span><span class='line'>cpu family  : 6
</span><span class='line'>model       : 58
</span><span class='line'>model name  : Intel(R) Core(TM) i7-3770 CPU @ 3.40GHz
</span><span class='line'>stepping    : 9
</span><span class='line'>cpu MHz     : 3405.814
</span><span class='line'>cache size  : 6144 KB
</span><span class='line'>fpu     : yes
</span><span class='line'>fpu_exception   : yes
</span><span class='line'>cpuid level : 5
</span><span class='line'>wp      : yes
</span><span class='line'>flags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx rdtscp lm constant_tsc up rep_good pni monitor ssse3 lahf_lm
</span><span class='line'>bogomips    : 6811.62
</span><span class='line'>clflush size    : 64
</span><span class='line'>cache_alignment : 64
</span><span class='line'>address sizes   : 36 bits physical,  48 bits virtual
</span><span class='line'>power management:
</span></code></pre></td></tr></table></div></figure>


<p>地味に忘れる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[php]連想配列を特定のキーの同じ値でグルーピング]]></title>
    <link href="http://blog.code-life.net/blog/2013/12/18/php-group-array-by-value/"/>
    <updated>2013-12-18T22:36:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/12/18/php-group-array-by-value</id>
    <content type="html"><![CDATA[<p>連想配列を特定キーの同じ値でグルーピングする方法。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$arr</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;yamada&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;age&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;20&#39;</span>
</span><span class='line'>    <span class="p">),</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;satou&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;age&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;20&#39;</span>
</span><span class='line'>    <span class="p">),</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;suzuki&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;age&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;30&#39;</span>
</span><span class='line'>    <span class="p">),</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;tanaka&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;age&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;40&#39;</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">groupArray</span><span class="p">(</span><span class="nv">$arr</span><span class="p">,</span> <span class="nv">$key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$retval</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">foreach</span><span class="p">(</span><span class="nv">$arr</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$group</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">[</span><span class="nv">$key</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$retval</span><span class="p">[</span><span class="nv">$group</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$retval</span><span class="p">[</span><span class="nv">$group</span><span class="p">]</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$retval</span><span class="p">[</span><span class="nv">$group</span><span class="p">][]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$retval</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nx">groupArray</span><span class="p">(</span><span class="nv">$arr</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<h3>結果</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">array</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">20</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="s2">&quot;yamada&quot;</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;age&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;20&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="s2">&quot;satou&quot;</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;age&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;20&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">30</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="s2">&quot;suzuki&quot;</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;age&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;30&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">40</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">array</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="k">array</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span> <span class="s2">&quot;tanaka&quot;</span>
</span><span class='line'>      <span class="p">[</span><span class="s2">&quot;age&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>      <span class="nx">string</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="s2">&quot;40&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ageキーの同じ値でグルーピングされていることが確認できます。そもそも(ry</p>
]]></content>
  </entry>
  
</feed>
