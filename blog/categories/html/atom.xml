<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html | Code Life]]></title>
  <link href="http://blog.code-life.net/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://blog.code-life.net/"/>
  <updated>2014-08-21T22:18:58+09:00</updated>
  <id>http://blog.code-life.net/</id>
  <author>
    <name><![CDATA[noto]]></name>
    <email><![CDATA[noto.code.life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Movable TypeでHeadのタイトル要素などを条件分岐させる]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/31/movable-type-tags/"/>
    <updated>2012-03-31T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/31/movable-type-tags</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p>HTMLのheadのtitle、description、keywordsをMovable Typeで条件分岐して最適化してみようと思います。
いろいろなブログでも解説されていますが、結構使いまわせるのでお勧めです。</p>

<p>使用するテンプレートは<a href="/blog/2012/03/03/corporate-site-html5">以前使用したHTML5のテンプレート</a>です。</p>

<!--more-->


<h2>基礎テンプレート</h2>

<h3>HTML element</h3>

<p>```html
<head>
  <meta charset="UTF-8" /></p>

<p>  <title>Code Life株式会社</title></p>

<p>  <meta name="description" content="Code Life株式会社ではPHP、Java、C#を用いた開発サービスをご提供します。" />
  <meta name="keywords" content="codelife,php,java,c#,開発,サービス" />
  <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no" /></p>

<p>  <link rel="icon" type="image/png" href="http://blog.code-life.net/favicon.png" />
  <link rel="shortcut icon" href="http://blog.code-life.net/favicon.ico" />
  <link rel="apple-touch-icon" href="http://blog.code-life.net/apple-touch-icon.png" /></p>

<p>  <link rel="index" href="http://blog.code-life.net/" title="Code Life株式会社" />
  <link rel="sitemap" href="http://blog.code-life.net/sitemap.html" title="サイトマップ" /></p>

<p>  <link rel="stylesheet" href="http://blog.code-life.net/css/reset.css" media="screen,print" />
  <link rel="stylesheet" href="http://blog.code-life.net/css/layout.css" media="screen,print" /></p>

<p>  <!--[if lt IE 9]><script src="http://blog.code-life.net//html5shiv.googlecode.com/svn/trunk/html5.js"></script>&lt;![endif]&mdash;></p>

<p></head>
```</p>

<h3>Movable Type element</h3>

<p>```html
<head>
  <meta charset="<$mt:PublishCharset$>&ldquo; /></p>

<p>  &lt;mt:SetvarBlock name=&ldquo;SiteURL&rdquo;>&lt;mt:BlogParentWebsite>&lt;$mt:WebsiteURL$>&lt;/mt:BlogParentWebsite>&lt;/mt:SetvarBlock>
  &lt;mt:Include module=&ldquo;ページタイトル&rdquo; parent=&ldquo;1&rdquo;>
  <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no" /></p>

<p>  <link rel="icon" type="image/png" href="<$mt:GetVar name="SiteURL"$>favicon.png" />
  <link rel="shortcut icon" href="<$mt:GetVar name="SiteURL"$>favicon.ico" />
  <link rel="apple-touch-icon" href="<$mt:GetVar name="SiteURL"$>apple-touch-icon.png" /></p>

<p>  <link rel="index" href="<$mt:GetVar name="SiteURL"$>&ldquo; title=&rdquo;&lt;mt:BlogParentWebsite>&lt;$mt:WebsiteName$>&lt;/mt:BlogParentWebsite>&ldquo; />
  <link rel="sitemap" href="<$mt:GetVar name="SiteURL"$>sitemap.html&rdquo; title=&ldquo;サイトマップ&rdquo; /></p>

<p>  <link rel="stylesheet" href="<$mt:GetVar name="SiteURL"$>css/reset.css" media=&ldquo;screen,print&rdquo; />
  <link rel="stylesheet" href="<$mt:GetVar name="SiteURL"$>css/layout.css" media=&ldquo;screen,print&rdquo; /></p>

<p>  <!--[if lt IE 9]><script src="http://blog.code-life.net//html5shiv.googlecode.com/svn/trunk/html5.js"></script>&lt;![endif]&mdash;></p>

<p></head>
```</p>

<h3>Movable Type Module element</h3>

<p>モジュール名：ページタイトル</p>

<p><a href="/images/2012/03/movable-type-tags-1.jpg"><img src="/images/2012/03/movable-type-tags-1.jpg" width="300" height="187"></a></p>

<p>```html
&lt;mt:If name=&ldquo;main_index&rdquo;><!-- ▼テンプレート設定のテンプレート種類がメインインデックスの場合 --></p>

<p>  &lt;mt:IfWebsite><!-- ▼ウェブサイトのコンテキストの場合 --></p>

<pre><code>&lt;title&gt;&lt;$mt:WebsiteName$&gt;&lt;/title&gt;
&lt;meta name="description" content="&lt;$mt:WebsiteDescription$&gt;" /&gt;
&lt;meta name="keywords" content="codelife,php,java,c#,開発,サービス" /&gt;
</code></pre>

<p>  &lt;mt:Else><!-- ▼ブログのコンテキストの場合 --></p>

<pre><code>&lt;title&gt;&lt;$mt:BlogName$&gt; | &lt;mt:BlogParentWebsite&gt;&lt;$mt:WebsiteName$&gt;&lt;/mt:BlogParentWebsite&gt;&lt;/title&gt;
&lt;meta name="description" content="&lt;$mt:BlogDescription$&gt;" /&gt;
&lt;meta name="keywords" content="&lt;$mt:BlogName$&gt;,codelife,php,java,c#,開発,サービス" /&gt;
</code></pre>

<p>  &lt;/mt:IfWebsite></p>

<p>&lt;mt:ElseIf name=&ldquo;page_archive&rdquo;><!-- ▼ページアーカイブの場合 --></p>

<p>  <title>&lt;$mt:PageTitle remove_html=&ldquo;1&rdquo;$> | &lt;mt:BlogParentWebsite>&lt;$mt:WebsiteName$>&lt;/mt:BlogParentWebsite></title>
  <meta name="keywords" content="<$mt:PageKeywords$>&ldquo; />
  <meta name="description" content="<$mt:PageExcerpt remove_html="1"$>&rdquo; /></p>

<p>&lt;mt:ElseIf name=&ldquo;entry_archive&rdquo;><!-- ▼エントリーアーカイブの場合 --></p>

<p>  <title>&lt;$mt:EntryTitle remove_html=&ldquo;1&rdquo;$> &ndash; &lt;$mt:BlogName$> | &lt;mt:BlogParentWebsite>&lt;$mt:WebsiteName$>&lt;/mt:BlogParentWebsite></title>
  <meta name="keywords" content="<$mt:EntryKeywords$>&ldquo; />
  <meta name="description" content="<$mt:EntryExcerpt remove_html="1"$>&rdquo; /></p>

<p>&lt;mt:ElseIf name=&ldquo;category_archive&rdquo;><!-- ▼カテゴリアーカイブの場合 --></p>

<p>  <title>&lt;$mt:CategoryLabel remove_html=&ldquo;1&rdquo;$> &ndash; &lt;$mt:BlogName$> | &lt;mt:BlogParentWebsite>&lt;$mt:WebsiteName$>&lt;/mt:BlogParentWebsite></title>
  <meta name="keywords" content="<$mt:CategoryLabel remove_html="1"$>,codelife,php,java,c#,開発,サービス" />
  <meta name="description" content="<$mt:CategoryDescription$>&ldquo; /></p>

<p>&lt;mt:Else><!-- ▼それ以外、カスタムテンプレートなどの場合 --></p>

<p>  &lt;mt:IfWebsite><!-- ▼ウェブサイトのコンテキストの場合 --></p>

<pre><code>&lt;title&gt;&lt;$mt:TemplateName$&gt; | &lt;$mt:WebsiteName$&gt;&lt;/title&gt;
&lt;meta name="keywords" content="&lt;$mt:TemplateName$&gt;,codelife,php,java,c#,開発,サービス" /&gt;
&lt;meta name="description" content="&lt;$mt:TemplateDescription$&gt;" /&gt;
</code></pre>

<p>  &lt;mt:Else><!-- ▼ブログのコンテキストの場合 --></p>

<pre><code>&lt;title&gt;&lt;$mt:TemplateName$&gt; - &lt;$mt:BlogName$&gt; | &lt;mt:BlogParentWebsite&gt;&lt;$mt:WebsiteName$&gt;&lt;/mt:BlogParentWebsite&gt;&lt;/title&gt;
&lt;meta name="keywords" content="&lt;$mt:TemplateName$&gt;,codelife,php,java,c#,開発,サービス" /&gt;
&lt;meta name="description" content="&lt;$mt:TemplateDescription$&gt;" /&gt;
</code></pre>

<p>  &lt;/mt:IfWebsite></p>

<p>&lt;/mt:If>
```</p>

<h2>解説</h2>

<h3>Movable Type elementで使用したMTタグ</h3>

<p>※タグの説明は<a href="http://www.movabletype.jp/documentation/appendices/tags/" target="_blank">MTタグリファレンスページ</a>を引用しています。</p>

<p>```
&lt;$mt:PublishCharset$>
※環境設定ファイル (mt-config.cgi)のPublishCharsetに設定した値を表示します。
※デフォルトはUTF-8</p>

<p>&lt;mt:Include module=&ldquo;ページタイトル&rdquo; parent=&ldquo;1&rdquo;>
※後述するテンプレートモジュールを呼び出しています。
※parent=&ldquo;1"を指定することで、ブログからも呼び出しが可能。</p>

<p>&lt;mt:BlogParentWebsite>
※ブログの所属している親ウェブサイトを取得するブロックタグです。</p>

<p>&lt;$mt:WebsiteURL$>
※ウェブサイトの URL (サイト URL) を <a href="http://">http://</a> から始まる絶対 URL で表示します。
```</p>

<p>下のURLの表記が長いので、</p>

<p><code>html
&lt;mt:BlogParentWebsite&gt;&lt;$mt:WebsiteURL$&gt;&lt;/mt:BlogParentWebsite&gt;
</code></p>

<p>Setvarblockを使用して変数設定します。</p>

<p><code>html
&lt;mt:SetvarBlock name="SiteURL"&gt;&lt;mt:BlogParentWebsite&gt;&lt;$mt:WebsiteURL$&gt;&lt;/mt:BlogParentWebsite&gt;&lt;/mt:SetvarBlock&gt;
</code></p>

<p>あとはそれをgetで取得してあげるだけ。すっきり。</p>

<p><code>html
&lt;$mt:GetVar name="SiteURL"$&gt;
</code></p>

<h3>Movable Type Module element</h3>

<h4>main_indexの処理</h4>

<p><a href="/images/2012/03/movable-type-tags-2.jpg"><img src="/images/2012/03/movable-type-tags-2-300x273.jpg" width="300" height="273"></a></p>

<p>インデックステンプレートのテンプレート設定のところにあるテンプレートの種類をMain Index（main_index）に設定したテンプレートに対して表示を行います。</p>

<p>```html
&lt;mt:IfWebsite>
※ウェブサイトのコンテキストにあるかどうかを判別します。</p>

<p>&lt;$mt:WebsiteName$>
※ウェブサイトの名前を表示します。</p>

<p>&lt;$mt:WebsiteDescription$>
※ウェブサイトの説明文に入力した内容を表示します。
```</p>

<p>```
&lt;$mt:BlogName$>
※ブログの名前を表示します。</p>

<p>&lt;$mt:BlogDescription$>
※ブログの説明を表示します。
```</p>

<h4>page_archiveの処理</h4>

<p>ページアーカイブ、つまりウェブページで作成したページに対して、処理が行われます。</p>

<p>```html
&lt;$mt:PageTitle remove_html=&ldquo;1&rdquo;$>
※ウェブページのタイトルを表示します。</p>

<p>&lt;$mt:PageKeywords$>
※ウェブページのキーワードに入力した内容を表示します。</p>

<p>&lt;$mt:PageExcerpt remove_html=&ldquo;1&rdquo;$>
※ウェブページの概要を表示します。
※概要に記述がないときは、ウェブページの本文を、
ブログ記事の設定で指定した概要の文字数だけ先頭から表示します。
```</p>

<p>remove_html=&ldquo;1"を指定することで、htmlタグが使用されていたらそれを削除します。</p>

<h4>entry_archiveの処理</h4>

<p>エントリーアーカイブ、ブログ記事などで作成したページに対して、処理が行われます。</p>

<p>```html
&lt;$mt:EntryTitle remove_html=&ldquo;1&rdquo;$>
※ブログ記事のタイトルを表示します。</p>

<p>&lt;$mt:EntryKeywords$>
※ブログ記事のキーワードフィールドの内容を表示します。</p>

<p>&lt;$mt:EntryExcerpt remove_html=&ldquo;1&rdquo;$>
※ブログ記事の概要を表示します。
```</p>

<p>ページアーカイブ同様の設定をこちらにも反映しています。</p>

<h4>category_archiveの処理</h4>

<p>カテゴリアーカイブ、カテゴリに所属するブログ記事一覧などで表示されます。</p>

<p>```html
&lt;$mt:CategoryLabel remove_html=&ldquo;1&rdquo;$>
※カテゴリ名を表示します。</p>

<p>&lt;$mt:CategoryDescription$>
※カテゴリの説明を表示します。
```</p>

<h4>それ以外の処理</h4>

<p>インデックステンプレートでテンプレート種類をmain_index以外に設定した場合などに適用されます。</p>

<p>ただ、インデックステンプレートには、タイトル入力欄や説明文入力欄がないので、新たにカスタムフィールドで設定してあげる必要があります。</p>

<p><a href="/images/2012/03/movable-type-tags-3.jpg"><img src="/images/2012/03/movable-type-tags-3-300x209.jpg" width="300" height="209"></a></p>

<p><a href="/images/2012/03/movable-type-tags-4.jpg"><img src="/images/2012/03/movable-type-tags-4-300x262.jpg" width="300" height="262"></a></p>

<p>システムのカスタムフィールドの作成から、それぞれフィールドを作成することで、インデックステンプレートの入力欄に表示されます。
あとはそのカスタムフィールドを表示します。</p>

<p><code>html
&lt;$mt:TemplateName$&gt;
※カスタムフィールドで指定したページ名を表示します。
&lt;$mt:TemplateDescription$&gt;
※カスタムフィールドで指定したページの説明文を表示します。
</code></p>

<h4>補足</h4>

<p>デフォルトでは、ウェブサイトの設定画面にはサイトキーワードを設定するところがないので、テンプレート上に記述しています。
こちらもカスタムフィールドでフィールドを用意してあげるといいと思います。</p>

<p>ウェブページでフォルダを使用する場合で、フォルダ名を表示をさせたい場合はページアーカイブの処理を下記のように変更します。</p>

<p>```html
&lt;mt:ElseIf name=&ldquo;page_archive&rdquo;><!-- ▼ページアーカイブの場合 --></p>

<p><title>&lt;$mt:PageTitle remove_html=&ldquo;1&rdquo;$>
&lt;mt:IfFolder>&ndash; &lt;mt:TopLevelFolder>&lt;$mt:FolderLabel$>&lt;/mt:TopLevelFolder>&lt;/mt:IfFolder> | &lt;mt:BlogParentWebsite>&lt;$mt:WebsiteName$>&lt;/mt:BlogParentWebsite></title>
<meta name="keywords" content="<$mt:PageKeywords$>&ldquo; />
<meta name="description" content="<$mt:PageExcerpt remove_html="1"$>&rdquo; />
```</p>

<p>もし、フォルダーに所属していたら、所属しているメインフォルダを表示しなさいって感じです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery MobileでGoogleMap]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/27/jquery-mobile-googlemap/"/>
    <updated>2012-03-27T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/27/jquery-mobile-googlemap</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p><a href="/blog/2012/03/23/start-jquery-mobile" title="jQuery Mobileのコトハジメ">前回</a>に引き続き、jQuery Mobileです。
今回はGoogle Mapsを表示してみようと思います。</p>

<p>やりたいことは以下の項目。</p>

<ul>
<li>指定した経度・緯度の場所を表示する。</li>
<li>マーカーを表示させる。</li>
</ul>


<!--more-->


<h2>静的なページ</h2>

<p>まずは、静的なページで表示してみる</p>

<p>```html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css"></p>

<pre><code>#gmap { width:320px;height:320px; }
</code></pre>

<p>  </style>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript"></p>

<pre><code>function initialize() {
  var latlng = new google.maps.LatLng(35.710635, 139.792692);
  var myOptions = {
    zoom: 15,
    center: latlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

  var marker = new google.maps.Marker({
    position: latlng,
    map: map,
    title:"かみなりもん"
  });
};
</code></pre>

<p>  </script>
</head>
<body onload="initialize()">
  <div id="gmap"></div>
</body>
</html>
```</p>

<p><a href="http://jsdo.it/regret2721/pc3G" target="_blank">デモページ</a></p>

<h3>jQuery Mobile</h3>

<p>```html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css"></p>

<pre><code>#gmap { width:320px;height:320px; }
</code></pre>

<p>  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript"></p>

<pre><code>function initialize() {
  var latlng = new google.maps.LatLng(35.710635, 139.792692);
  var myOptions = {
    zoom: 15,
    center: latlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

  var marker = new google.maps.Marker({
    position: latlng,
    map: map,
    title:"かみなりもん"
  });
};
</code></pre>

<p>  </script>
</head>
<body onload="initialize()"></p>

<div data-role="page">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
```</p>

<p><a href="http://jsdo.it/regret2721/gbHB" target="_blank">デモページ</a></p>

<h3>地図の大きさを100%指定にしてみる</h3>

<p>```html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css"></p>

<pre><code>#gmap { width:100%;height:100%; }
</code></pre>

<p>  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript"></p>

<pre><code>function initialize() {
  var latlng = new google.maps.LatLng(35.710635, 139.792692);
  var myOptions = {
    zoom: 15,
    center: latlng,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

  var marker = new google.maps.Marker({
    position: latlng,
    map: map,
    title:"かみなりもん"
  });

  var pageHeight = $(document).height();
  $("#gmap").css("height",pageHeight);
};
</code></pre>

<p>  </script>
</head>
<body onload="initialize()"></p>

<div data-role="page">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
```</p>

<p><a href="http://jsdo.it/regret2721/unrq" target="_blank">デモページ</a></p>

<p>```javascript</p>



<p>```</p>

<p>CSSを100%に変更</p>

<p><code>javascript
var pageHeight= $(document).height();
$("#gmap").css("height",pageHeight);
</code></p>

<p>CSSでgmap要素を100%指定すると消えてしまったので、Javascriptでドキュメントの高さをgmapに設定</p>

<h3>地図の大きさを100%でページ分割する</h3>

<p>```html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css"></p>

<pre><code>#gmap { width:100%;height:100%; }
</code></pre>

<p>  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
</head>
<body></p>

<div data-role="page" id="index">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <a href="#access" data-role="button">地図を表示する</a>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>




<div data-role="page" id="access">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
    <script type="text/javascript">
      function initialize() {
        var latlng = new google.maps.LatLng(35.710635, 139.792692);
        var myOptions = {
          zoom: 15,
          center: latlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

        var marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title:"かみなりもん"
        });

        var pageHeight = $(document).height();
        $("#gmap").css("height",pageHeight);
      };
      $('#access').bind('pageshow',initialize);
    </script>

  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
```</p>

<p><a href="http://jsdo.it/regret2721/gBxa" target="_blank">デモページ</a></p>

<p><code>html
&lt;body onload="initialize()"&gt;
↓
&lt;body&gt;
</code></p>

<p>スクリプトが全ページで実行されてしまうので、onloadの指定をやめました。</p>

<p>```javascript</p>

<script type="text/javascript">
  function initialize() {
    var latlng = new google.maps.LatLng(35.710635, 139.792692);
    var myOptions = {
      zoom: 15,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

    var marker = new google.maps.Marker({
      position: latlng,
      map: map,
      title:"かみなりもん"
    });

    var pageHeight = $(document).height();
    $("#gmap").css("height",pageHeight);
  };
  $('#access').bind('pageshow',initialize);
</script>


<p>```</p>

<p>script要素をhtmlコードのgmap下に移動。
pageshowイベントを使用して、accessページのみ実行するように指定しています。</p>

<p>この辺は、こちらのサイトを参考にさせて頂きました。
<a href="http://www.matsuaz.com/4_1/2011/06/18/1308334179361.html" target="_blank"><a href="http://www.matsuaz.com/4_1/2011/06/18/1308334179361.html">http://www.matsuaz.com/4_1/2011/06/18/1308334179361.html</a></a></p>

<p>ちなみに</p>

<p><code>javascript
$('#access').bind('pageshow',initialize);
↓
$('#access').live('pageshow',initialize);
</code></p>

<p>動的要素なので、bindをliveにすればHead内でも実行できました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Mobileのコトハジメ]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/23/start-jquery-mobile/"/>
    <updated>2012-03-23T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/23/start-jquery-mobile</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p>VPSであーだこーだしていて、PHPから書きだされたファイルがApache権限ではてさて、SuPHP？パフォーマンス？fastcgi？って感じの初心者っぷりでgoogle先生をを頼り中な今日この頃。</p>

<p>さて、本題。
スマートフォンサイト作るとき、jQuery Mobileにお世話になってます。</p>

<ul>
<li>スマートフォンサイトのUIをカッコ良くさせたい。</li>
<li>さっくり実装させたい。</li>
</ul>


<p>こんなときに便利でお手軽なjQuery Mobile。
とりあえず、コトハジメ的に備忘録です。</p>

<!--more-->


<h2>はじめに</h2>

<ul>
<li>使用Ver：1.0.1</li>
</ul>


<p>わからないことは、jQuery Mobileの<a href="http://jquerymobile.com/demos/1.0.1/" target="_blank">DEMO</a>を見る。
英語がわからない時は、<a href="http://dev.screw-axis.com/doc/jquery_mobile/" target="_blank">日本語リファレンス</a>見る。</p>

<p>デモサイト見ればレイアウト実装のサンプルが豊富なので、たいていのことはカバーできます。</p>

<h2>初期テンプレート</h2>

<p>```html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>code life</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="jquery.mobile.init.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
</head>
<body></p>

<div data-role="page">
  <header data-role="header">
    <h1>タイトル</h1>
  </header>
  <div data-role="content">
    <h1>見出し1</h1>
    <p>コンテンツ内容</p>
    <h2>見出し2</h2>
    <p>コンテンツ内容</p>
    <h3>見出し3</h3>
    <p>コンテンツ内容</p>
  </div>
  <footer data-role="footer">
    <h4>CopyRight &copy; Code-life.net. All rights reserved.</h4>
  </footer>
</div>


<p></body>
</html>
```</p>

<p><a href="/images/2012/03/start-jquery-mobile-1.jpg"><img src="/images/2012/03/start-jquery-mobile-1.jpg" width="300" height="264"></a></p>

<p>公式を参考にすると上記のような感じになります。</p>

<h3>jQuery Mobile 初期設定</h3>

<p>エラーメッセージなどが英語だったりするので設定を変更するために下記のJSを読み込みます。</p>

<p>```javascript</p>

<script src="jquery.mobile.init.js"></script>


<p>```</p>

<p>```javascript
$(document).bind(&lsquo;mobileinit&rsquo;, function(){</p>

<pre><code>$.mobile.loadingMessage = '読み込み中';
$.mobile.pageLoadErrorMessage = '読み込みに失敗しました';
$.mobile.dialog.prototype.options.closeBtnText = '閉じる';
$.mobile.selectmenu.prototype.options.closeText= '閉じる';
$.mobile.listview.prototype.options.filterPlaceholder = '検索文字列';
$.mobile.page.prototype.options.backBtnText = '戻る';
</code></pre>

<p>  });
```</p>

<p>ポイントは、上記スクリプトをjQuery MobileのJS読み込み前に読み込むこと。</p>

<p>参考: <a href="http://dev.screw-axis.com/doc/jquery_mobile/api/configuring_defaults/" target="_blank">グローバル設定</a></p>

<h3>jQuery Mobile CSS初期設定</h3>

<p>文字数が要素内で一定値をオーバーすると、文字が省略されてしまうので、それをCSSで解除してあげる。</p>

<p><code>css
.ui-header .ui-title,
.ui-footer .ui-title,
.ui-btn-inner,
.ui-li-heading,
.ui-li .ui-btn-text a.ui-link-inherit,
.ui-li-desc {
  overflow: visible;
  white-space: normal;
}
</code></p>

<h3>デザインを変更する</h3>

<p>デフォルトのデザインをそのまま使う場合はあまりないので、それぞれのデザインをオリジナルなものに変更します。</p>

<p>```html</p>

<div data-role="page" data-theme="f">
  <header data-role="header" data-theme="f">
    <h1>タイトル</h1>
  </header>
  <div data-role="content" data-theme="f">
    <h1>見出し1</h1>
    <p>コンテンツ内容</p>
    <h2>見出し2</h2>
    <p>コンテンツ内容</p>
    <h3>見出し3</h3>
    <p>コンテンツ内容</p>
  </div>
  <footer data-role="footer" data-theme="f">
    <h4>CopyRight &copy; Code-life.net. All rights reserved.</h4>
  </footer>
</div>


<p>```</p>

<p>data-theme=&ldquo;f"をそれぞれの要素に追加しました。</p>

<p>data-themeによって、スタイルの切り替えが可能。
jQuery Mobileでは、aからeまでのスタイルがセットされているので、何もスタイルがセットされていないf～zなど任意のスタイルを指定してあげれば、当然スタイルがセットされてないのでデザインが解除されます。</p>

<p><a href="/images/2012/03/start-jquery-mobile-2.jpg"><img src="/images/2012/03/start-jquery-mobile-2.jpg" width="300" height="241"></a></p>

<p>あとはそれぞれいつも通りにCSSでデザイン作るだけです。</p>

<h3>jQuery Mobileのデフォルトスタイルをカスタマイズ</h3>

<p>テーマが折角あるようなのでテーマcssを作りたい。</p>

<p>JavaScriptで適用されているCSSスタイルが何なのかを見るときは、ブラウザの要素検証だったり、firebugだったりで適用CSSを確認しますよね。
それをすべて追って、上書きするのは大変です。</p>

<p>そんなときは、jQuery Mobileの<a href="http://jquerymobile.com/themeroller/" target="_blank">Theme Roller</a>を使います。
このウェブツールを使うと、jQuery Mobileのテーマをちょちょいと作ることができます。</p>

<p><a href="/images/2012/03/start-jquery-mobile-3.png"><img src="/images/2012/03/start-jquery-mobile-3.png" width="300" height="171"></a></p>

<p>カラーコード指定で迷った場合は、Adobe Kulerからも選択できます。
ちなみにKulerをどう反映すればいいか最初はわからなかったんですが、カラーアイコン（？）をドラック＆ドロップで反映できます。
そのデザイン反映したやつを左上のDownload Themeでダウンロードする。</p>

<p>あとはそれを組み込んで随時改修していきましょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【第4回】CSSの実装～TOPページ｜HTML5で作る企業サイトのコーディング]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/19/css-top-page-corporate-site-html5/"/>
    <updated>2012-03-19T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/19/css-top-page-corporate-site-html5</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p>今日はCSSの実装に移ります。
全体的なレイアウトのスタイリングを指定しています。</p>

<!--more-->


<h2>サイズの指定</h2>

<p>```css</p>

<h1>header,</h1>

<h1>header #gNav,</h1>

<h1>main,</h1>

<h1>footer,</h1>

<h1>footer #fNav{</h1>

<pre><code> width:960px;
 margin:0 auto;
</code></pre>

<p>}
```</p>

<p>共通部分でまとめられるところはまとめてしまいます。
後々変更が必要になったときはここを変えれば、一括で変更できますしね。</p>

<h2>Containerの実装</h2>

<h3>HTML</h3>

<p>```html</p>

<div id="container">

  <header id="header">
  </header>
  <div id="main">
  </div>
  <footer id="footer">
  </footer>

</div>


<p>```</p>

<h3>CSS</h3>

<p>```css</p>

<h1>container{</h1>

<p>  font-size:100%;
  line-height:150%;
  letter-spacing:0.05em;
}
```</p>

<p>各要素を入れるコンテナボックスを作ります。
人によっては、wrapperとかでしょうか。</p>

<p>CSSには、フォントサイズ、行間、文字間の指定を行っています。
また背景画像がある場合はこのcontainerに設定します。</p>

<h2>Headerの実装</h2>

<h3>HTML</h3>

<p>```html
<header id="header">
  <h1 class="logo">Code Life株式会社</h1>
  <p class="description">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</p>
  <nav id="gNav"></p>

<pre><code>&lt;ul&gt;
  &lt;li&gt;&lt;a href=""&gt;menu1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>  </nav>
</header>
```</p>

<h3>CSS</h3>

<p>```css</p>

<h1>header .logo{</h1>

<pre><code> width:360px;
 float:left;
</code></pre>

<p>}</p>

<h1>header .description{</h1>

<pre><code> width:600px;
 float:right;
 text-align:right;
</code></pre>

<p>}</p>

<h1>header #gNav li,</h1>

<h1>header #gNav li a{</h1>

<pre><code> width:192px;
</code></pre>

<p>}</p>

<h1>header #gNav li{</h1>

<pre><code> float:left;
 text-align:center;
</code></pre>

<p>}</p>

<h1>header #gNav li a{</h1>

<pre><code> display:block;
 background-color:#ccc;
</code></pre>

<p>}</p>

<h1>header #gNav li a:hover{</h1>

<pre><code> color:#fff;
 background-color:#000;
</code></pre>

<p>}
```</p>

<p>ここでは、おもにタイトル部分とグローバルナビゲーションの設定を行っています。</p>

<p>floatをするなら、親要素、float要素それぞれにwidthを指定してあげること。
これをしないと、レイアウト崩れの原因になります。</p>

<h2>Main contents &amp; sidebarの実装</h2>

<h3>HTML</h3>

<p>```html</p>

<div id="main">
  <div id="slideShow">
    <!-- 略 -->
  </div>
  <div id="contents">
    <article id="information">
      <h1>最新のお知らせ</h1>
      <section id="news">
        <h2>トピックス</h2>
        <dl>
          <dt></dt>
          <dd></dd>
        </dl>
      </section>

      <!-- 略 -->

    </article>
  </div>
  <div id="sidebar">
    <!-- 略 -->
  </div>
</div>


<p>```</p>

<h3>CSS</h3>

<p>```css</p>

<h1>main #slideShow{</h1>

<p>  /<em> slideshow 後ほど実装 </em>/
}</p>

<h1>main #contents,</h1>

<h1>main #contents #information dl{</h1>

<p>  width:720px;
}</p>

<h1>main #contents{</h1>

<p>  float:left;
}</p>

<h1>main #contents #information dt{</h1>

<p>  float:left;
  width:140px;
}</p>

<h1>main #contents #information dd{</h1>

<p>  float:left;
  width:580px;
}</p>

<h1>main #sidebar{</h1>

<p>  width:210px;
  float:right;
}
```</p>

<p>カラム部分となるcontentsとsidebarに対してfloatを。
それにあわせて、information部分のdlにスタイルを設定しています。</p>

<h2>Footerの実装</h2>

<h3>HTML</h3>

<p>```html
<footer id="footer">
  <ol id="breadCrumbs"></p>

<pre><code>&lt;li&gt;&lt;a href="#"&gt;HOME&lt;/a&gt; &gt;&lt;/li&gt;
&lt;li&gt;トップページ&lt;/li&gt;
</code></pre>

<p>  </ol>
  <p id="pageTop"><a href="#top">Page Top</a></p>
  <nav id="fNav"></p>

<pre><code>&lt;ul&gt;
  &lt;li&gt;&lt;a href=""&gt;menu6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=""&gt;menu9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>  </nav>
  <p id="copyRight">Copyright &copy; 2012 Code Life.inc, All Rights Reserved.</p>
</footer>
```</p>

<h3>CSS</h3>

<p>```css</p>

<h1>footer #breadCrumbs{</h1>

<p>  width:720px;
  float:left;
}</p>

<h1>footer #breadCrumbs li{</h1>

<p>  float:left;
  margin-right:5px;
}</p>

<h1>footer #pageTop{</h1>

<p>  width:210px;
  float:right;
  text-align:right;
}</p>

<h1>footer #fNav{</h1>

<p>  clear:both;
  text-align:center;
}</p>

<h1>footer #fNav li{</h1>

<p>  display:inline;
  padding-right:5px;
  border-right:1px solid #000;
}</p>

<h1>footer #fNav li:last-child{</h1>

<p>  border-right:none;
}</p>

<h1>footer #copyRight{</h1>

<p>  text-align:center;
}
```</p>

<p>パンくず、ページトップボタン、サブメニューのナビスタイルを実装。
サブメニューの部分は、<code>display:inline;</code>を使用しています。</p>

<p><code>float:left;</code>だと一旦左寄せにしたものをセンター配置ということをしなくてはいけないので、ここは簡単にインライン要素にしています。</p>

<p>ということでこれで、具体的な調整はしていないものの、大まかなレイアウトの枠組みは完了しました。
あとはデザインに合わせて各スタイル要素を設定していくだけです。</p>

<ul>
<li><a href="/blog/2012/03/03/corporate-site-html5">【第1回】HTML5で作る企業サイトのコーディング</a></li>
<li><a href="/blog/2012/03/07/top-page-corporate-site-html5">【第2回】トップページを作ろう。HTML5で作る企業サイトのコーディング</a></li>
<li><a href="/blog/2012/03/10/sub-page-corporate-site-html5">【第3回】下層ページを作ろう。HTML5で作る企業サイトのコーディング</a></li>
<li>【第4回】CSSの実装～TOPページ｜HTML5で作る企業サイトのコーディング</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5の新要素にidやclassを設定する理由]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/15/html5-id-class/"/>
    <updated>2012-03-15T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/15/html5-id-class</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p>今回は大枠のレイアウト要素の実装に入る前の準備。
後輩に、「何で？」と聞かれた部分なので自分の整理も含めて。</p>

<!--more-->


<h2>テンプレート</h2>

<h3>HTML</h3>

<p>```html
<body id="top"></p>

<!--=====================================================================
  HEADER
======================================================================-->


<p><header id="header">
</header></p>

<!--=====================================================================
  MAIN
======================================================================-->


<div id="main">
  <div id="slideShow">
  </div>
  <div id="content">
  </div>
  <div id="sidebar">
  </div>
</div>


<!--=====================================================================
  FOOTER
======================================================================-->


<p><footer id="footer">
</footer>
</body>
```</p>

<h3>CSS</h3>

<p>```css</p>

<h1>header{</h1>

<p>  width:100%;
}</p>

<h1>main{</h1>

<p>  width:100%;
}</p>

<h1>main #slideShow{</h1>

<p>  /<em> slideshow </em>/
}</p>

<h1>main #content{</h1>

<p>  width:50%;
  float:left;
}</p>

<h1>main #sidebar{</h1>

<p>  width:50%;
  float:right;
}</p>

<h1>footer{</h1>

<p>  width:100%;
  crear:both;
}
```</p>

<p>※実際の実装時は上記プロパティ変更します。</p>

<h2>解説</h2>

<p>大きく分けると上のような感じになると思います。</p>

<p>ポイントは</p>

<p><code>html
&lt;header id="header"&gt;
&lt;/header&gt;
</code></p>

<p>に対して、CSSで</p>

<p>```css</p>

<h1>header{}</h1>

<p>```</p>

<p>と指定しているところ。</p>

<p>headerという新要素ができたのだから、idやclass振らずにそのままCSSで</p>

<p><code>css
header{}
</code></p>

<p>これでも有効にはなります</p>

<ul>
<li>HTML5はまだ仕様確定ではないという点。</li>
<li>headerという要素はartcle内などでも後々使用するという点。</li>
<li>そもそも、わかりやすいようにしている。</li>
</ul>


<p>などを考慮して、新要素には必ずidなりclassを振るようにしています。
ただし、idをなんでもかんでも振ればいいってわけでもないですし、共通できるスタイルはclassにする感じです。</p>

<p>次は、CSSの中身をやろうかと思いますが、ソースコードが長くなりすぎたので、どうやろうか悩み中。。。</p>
]]></content>
  </entry>
  
</feed>
