<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jquery | Code Life]]></title>
  <link href="http://blog.code-life.net/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://blog.code-life.net/"/>
  <updated>2016-11-27T00:15:30+09:00</updated>
  <id>http://blog.code-life.net/</id>
  <author>
    <name><![CDATA[noto]]></name>
    <email><![CDATA[noto.code.life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jQueryイベントハンドラを登録したい要素数が多い場合はdelegateでパフォーマンスを向上させる]]></title>
    <link href="http://blog.code-life.net/blog/2015/08/25/jquery-delegate-performance/"/>
    <updated>2015-08-25T19:47:14+09:00</updated>
    <id>http://blog.code-life.net/blog/2015/08/25/jquery-delegate-performance</id>
    <content type="html"><![CDATA[<!--more-->


<h2>イベントハンドラの登録は重い処理</h2>

<p>&#8220;` html</p>

<ul>
    <li>1</li>
    <li>2</li>
    <li>3</li>
    ・・・省略・・・
    <li>100</li>
</ul>




<script>
$li.on('click', function(e) {
    console.log('bind');
});
</script>


<pre><code>
上記のliすべてにイベントハンドラを登録しようとすると性能がかなり落ちます。
元々イベントハンドラの登録自体が重い処理の為、その重い処理を大量の要素に行うと大きな影響を与えます。

## delegate(委譲)で性能をあげる

jQueryのonメソッドは、第2引数にイベントを発生させる要素をフィルタリングするセレクタを指定することで、親要素にハンドリングを委譲することができます。
今回の場合、liで発生したイベントを親要素であるulがハンドリングをします。

イベントハンドラの登録数を減らすことで性能の向上が期待できます。
</code></pre>

<p>$(&lsquo;ul&rsquo;).on(&lsquo;click&rsquo;, &lsquo;li&rsquo;, function(e) {
    console.log(&lsquo;delegate&rsquo;);
});
&#8220;`</p>

<h2>jsPerfでの性能テスト結果</h2>

<p><a href="http://jsperf.com">jsPerf</a>でbindとdelegateの性能テスト結果が以下になります。</p>

<p>※テスト環境: Chrome 44.0.2403.157 on Mac OS X 10.9.5</p>

<table>
<thead>
<tr>
<th style="text-align:center;">          </th>
<th> Ops/sec </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> bind     </td>
<td> 5,962   </td>
</tr>
<tr>
<td style="text-align:center;"> delegate </td>
<td> 383,790 </td>
</tr>
</tbody>
</table>


<p>要素数が多い場合、delegeteの方が約64倍性能が高いことが分かります。テストの詳細は<a href="http://jsperf.com/jquey-delegate-peformance">jquey delegate peformance</a>
から確認できます。</p>

<h2>参考</h2>

<ul>
<li><a href="http://gihyo.jp/magazine/wdpress/archive/2012/vol71">WEB+DB PRESS Vol.71</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[JQuery]checkboxのcheckedプロパティを変更してもchangeイベントは発火しない]]></title>
    <link href="http://blog.code-life.net/blog/2013/12/09/jquery-trigger-change-event-on-checkbox/"/>
    <updated>2013-12-09T23:07:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/12/09/jquery-trigger-change-event-on-checkbox</id>
    <content type="html"><![CDATA[<p>checkboxをprop(&lsquo;checked&rsquo;, true)で値を変更してもchangeイベントが発火しないのでメモ</p>

<!--more-->


<h2>環境</h2>

<ul>
<li>JQuery2.0.3</li>
</ul>


<h2>checkedプロパティを変更</h2>

<p>見たら分かるんだけど、期待する動作はコンソールに「checkbox change!!」と出力されること。</p>

<p>しかし、どうもcheckedプロパティを変更してもchangeイベントは発火しないよう。</p>

<p>&#8220;` html
&lt;!DOCTYPE html>
<html>
<head>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
</head>
<body>
<form>
    <input id="checkbox1" type="checkbox" name="example" value="hoge">
    <label for="checkbox1">Sample CheckBox</label>
</form></p>

<script type="text/javascript">
    (function() {
        $('input[name="example"]').on('change', function(e) {
            console.log('checkbox change!!');
        });

        $('input[name="example"]').prop('checked', true);
    })();
</script>


<p></body>
</html>
&#8220;`</p>

<h2>triggerでイベントを発行</h2>

<p>なのでtriggerでイベントハンドラの呼び出しをしてあげる必要がある。</p>

<p>&#8220;` javascript</p>

<script type="text/javascript">
    (function() {
        $('input[name="example"]').on('change', function(e) {
            console.log('checkbox change!!');
        });

        $('input[name="example"]').prop('checked', true).trigger('change');
    })();
</script>


<pre><code>
## イベントの発行元を判断する

trigger経由で発行されたイベントの場合のみなんらかの処理がしたい時がある。

そんな時は以下のようにしておく。
</code></pre>

<script type="text/javascript">
    (function() {
        $('input[name="example"]').on('change', function(e, param) {
            if (param === true) {
                // 何らかの処理
            }
            console.log('checkbox change!!');
        });

        $('input[name="example"]').prop('checked', true).trigger("change", [true]);
    })();
</script>


<p>&#8220;`</p>

<p>ちなみにラジオボタンでも同じです。
javascript好きになってきた今日この頃。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQueryでページトップへ]]></title>
    <link href="http://blog.code-life.net/blog/2012/05/10/scroll-top-jquery/"/>
    <updated>2012-05-10T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/05/10/scroll-top-jquery</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p><a href="/blog/2012/05/06/tab-menu-jquery" title="jQueryでタブメニュー">前回</a>に続き、jQueryネタです。
ページトップへっていうリンククリックしたときに滑らかに移動させます。
上に戻すだけの機能なら、jQueryのみで実現できます。</p>

<!--more-->


<h2>jQueryの読み込み</h2>

<p>&#8220;`html</p>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>


<pre><code>
例にならい、jQueryを読み込みます。

### html
</code></pre>

<p><body class="top"></p>

<p id="pageTop"><a href="#top">ページトップへ</a></p>


<p></body>
&#8220;`</p>

<p>bodyにclassでtopを付けておきます。
Javascriptが無効のときもページ内リンクが有効になります。</p>

<h3>Javascript</h3>

<pre><code class="javascript">$(function(){
  $("#pageTop a").click(function(){
    $('html,body').animate({ scrollTop: $($(this).attr("href")).offset().top }, 'slow','swing');
    return false;
  })
});
</code></pre>

<p>idで指定した「pageTop」内のアンカーリンクがクリックされた場合、スクロールでトップへ移動します。
スクロールのアニメーション部分は下記の指定。</p>

<pre><code>animate(params, [duration], [easing], [callback])
</code></pre>

<h4>duration</h4>

<p>「slow」、「normal」、「fast」、「ミリ秒単位」、初期値は「normal」</p>

<h4>easing</h4>

<p>値の変化量を調節するカスタム関数の名前。
初期で設定できるのは「linear」と「swing」。初期値は「swing」</p>

<p>こちらを参考にさせて頂きました。
<a href="http://semooh.jp/jquery/api/effects/animate/params,+options/" target="_blank"><a href="http://semooh.jp/jquery/api/effects/animate/params,+options/">http://semooh.jp/jquery/api/effects/animate/params,+options/</a></a></p>

<h3>プラグインを使う</h3>

<p>jQueryではないけど、よく使うプラグイン。</p>

<ul>
<li><a href="http://blog.webcreativepark.net/2007/07/12-143406.html" target="_blank">ページ内リンクをスマートにするsmoothScroll.js</a></li>
<li><a href="http://coliss.com/articles/build-websites/operation/javascript/296.html" target="_blank">[JS]簡単に設置できるページ内をスムーズにスクロールできるスクリプト -Page Scroller ver.3</a></li>
</ul>


<p>Page Scrollerは高機能で、いろいろな動作設定が可能です。
ちなみに、スマートフォンでも動くはずです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQueryでタブメニュー]]></title>
    <link href="http://blog.code-life.net/blog/2012/05/06/tab-menu-jquery/"/>
    <updated>2012-05-06T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/05/06/tab-menu-jquery</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p>今日は、jQueryのみでタブ切り替え（フェード付）の実装です。
jQueryのみで実装できるので、簡単な切り替えのみならお手軽感満載。</p>

<!--more-->


<h2>jQueryの読み込み</h2>

<p>&#8220;`html</p>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>


<pre><code>
あらかじめ、jQueryをhtmlファイルに読み込んでおきます。

## html
</code></pre>

<div id="tab">
  <ul class="tabNav">
    <li><a href="#contents01">contents01</a></li>
    <li><a href="#contents02">contents02</a></li>
  </ul>
  <div id="contents01" class="tabContents">
    コンテンツ内容01
  </div>
  <div id="contents02" class="tabContents">
    コンテンツ内容02
  </div>
</div>


<pre><code>
タブメニューとコンテンツ内容をそれぞれ記述します。
ポイントはclassで指定した「tabContents」
このクラスをjQueryによって、表示の切り替えとして利用します。

## Javascript
</code></pre>

<p>$(function() {
  $(&ldquo;#tab .tabContent&rdquo;).hide();
  $(&ldquo;#tab .tabNav li:first a&rdquo;).addClass(&ldquo;active&rdquo;).show();
  $(&ldquo;#tab .tabContent:first&rdquo;).show();
  $(&ldquo;#tab .tabNav li&rdquo;).click(function() {
    $(&ldquo;#tab .tabNav li a&rdquo;).removeClass(&ldquo;active&rdquo;);
    $(this).find(&ldquo;a&rdquo;).addClass(&ldquo;active&rdquo;);
    $(&ldquo;#tab .tabContent&rdquo;).hide();
    var activeTab = $(this).find(&ldquo;a&rdquo;).attr(&ldquo;href&rdquo;);
    $(activeTab).fadeIn();
    return false;
  });
});
&#8220;`</p>

<p>初めに、コンテンツ内容を非表示にします。
次に、メニューの最初の項目にclassでactiveを追加します。
また、コンテンツ内容の最初の項目を表示します。</p>

<p>あとはタブメニューがクリックされたら、activeクラスを削除し、クリックされた項目に付加。
同時に表示していたコンテンツ内容を消してフェードで新しいコンテンツを表示します。</p>

<p>CSSのスタイリングとhtmlもシンプルな構成なので結構お気に入りです。
豊富な機能とか求めるのであれば、jQueryプラグインの<a href="http://jqueryui.com/demos/tabs/" target="_blank">jQuery UI Tabs</a>とか使うのもいいかと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery MobileでGoogleMap]]></title>
    <link href="http://blog.code-life.net/blog/2012/03/27/jquery-mobile-googlemap/"/>
    <updated>2012-03-27T00:00:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2012/03/27/jquery-mobile-googlemap</id>
    <content type="html"><![CDATA[<p>Yuuです。</p>

<p><a href="/blog/2012/03/23/start-jquery-mobile" title="jQuery Mobileのコトハジメ">前回</a>に引き続き、jQuery Mobileです。
今回はGoogle Mapsを表示してみようと思います。</p>

<p>やりたいことは以下の項目。</p>

<ul>
<li>指定した経度・緯度の場所を表示する。</li>
<li>マーカーを表示させる。</li>
</ul>


<!--more-->


<h2>静的なページ</h2>

<p>まずは、静的なページで表示してみる</p>

<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html lang="ja" dir="ltr"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8" /&gt;
  &lt;title&gt;Google Maps&lt;/title&gt;
  &lt;meta name="viewport" content="initial-scale=1.0, user-scalable=no" /&gt;
  &lt;style type="text/css"&gt;
    #gmap { width:320px;height:320px; }
  &lt;/style&gt;
  &lt;script src="http://maps.google.com/maps/api/js?sensor=false"&gt;&lt;/script&gt;
  &lt;script type="text/javascript"&gt;
    function initialize() {
      var latlng = new google.maps.LatLng(35.710635, 139.792692);
      var myOptions = {
        zoom: 15,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

      var marker = new google.maps.Marker({
        position: latlng,
        map: map,
        title:"かみなりもん"
      });
    };
  &lt;/script&gt;
&lt;/head&gt;
&lt;body onload="initialize()"&gt;
  &lt;div id="gmap"&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p><a href="http://jsdo.it/regret2721/pc3G" target="_blank">デモページ</a></p>

<h3>jQuery Mobile</h3>

<p>&#8220;`html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css">
    #gmap { width:320px;height:320px; }
  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript">
    function initialize() {
      var latlng = new google.maps.LatLng(35.710635, 139.792692);
      var myOptions = {
        zoom: 15,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      var map = new google.maps.Map(document.getElementById(&ldquo;gmap&rdquo;),myOptions);</p>

<pre><code>  var marker = new google.maps.Marker({
    position: latlng,
    map: map,
    title:"かみなりもん"
  });
};
</code></pre>

<p>  </script>
</head>
<body onload="initialize()"></p>

<div data-role="page">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
&#8220;`</p>

<p><a href="http://jsdo.it/regret2721/gbHB" target="_blank">デモページ</a></p>

<h3>地図の大きさを100%指定にしてみる</h3>

<p>&#8220;`html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css">
    #gmap { width:100%;height:100%; }
  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript">
    function initialize() {
      var latlng = new google.maps.LatLng(35.710635, 139.792692);
      var myOptions = {
        zoom: 15,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      var map = new google.maps.Map(document.getElementById(&ldquo;gmap&rdquo;),myOptions);</p>

<pre><code>  var marker = new google.maps.Marker({
    position: latlng,
    map: map,
    title:"かみなりもん"
  });

  var pageHeight = $(document).height();
  $("#gmap").css("height",pageHeight);
};
</code></pre>

<p>  </script>
</head>
<body onload="initialize()"></p>

<div data-role="page">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
&#8220;`</p>

<p><a href="http://jsdo.it/regret2721/unrq" target="_blank">デモページ</a></p>

<p>&#8220;`javascript</p>



<pre><code>
CSSを100%に変更
</code></pre>

<p>var pageHeight= $(document).height();
$(&ldquo;#gmap&rdquo;).css(&ldquo;height&rdquo;,pageHeight);
&#8220;`</p>

<p>CSSでgmap要素を100%指定すると消えてしまったので、Javascriptでドキュメントの高さをgmapに設定</p>

<h3>地図の大きさを100%でページ分割する</h3>

<p>&#8220;`html
&lt;!DOCTYPE html>
<html lang="ja" dir="ltr">
<head>
  <meta charset="UTF-8" />
  <title>Google Maps</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
  <style type="text/css">
    #gmap { width:100%;height:100%; }
  </style>
  <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.css" />
  <script src="http://code.jquery.com/jquery-1.6.4.min.js"></script>
  <script src="http://code.jquery.com/mobile/1.0.1/jquery.mobile-1.0.1.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?sensor=false"></script>
</head>
<body></p>

<div data-role="page" id="index">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <a href="#access" data-role="button">地図を表示する</a>
  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>




<div data-role="page" id="access">

  <div data-role="header">
    <h1>Google Maps</h1>
  </div>

  <div data-role="content">
    <div id="gmap"></div>
    <script type="text/javascript">
      function initialize() {
        var latlng = new google.maps.LatLng(35.710635, 139.792692);
        var myOptions = {
          zoom: 15,
          center: latlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

        var marker = new google.maps.Marker({
          position: latlng,
          map: map,
          title:"かみなりもん"
        });

        var pageHeight = $(document).height();
        $("#gmap").css("height",pageHeight);
      };
      $('#access').bind('pageshow',initialize);
    </script>

  </div>

  <div data-role="footer">
    <h4>Copyright©Code Life.net</h4>
  </div>

</div>


<p></body>
</html>
&#8220;`</p>

<p><a href="http://jsdo.it/regret2721/gBxa" target="_blank">デモページ</a></p>

<pre><code class="html">&lt;body onload="initialize()"&gt;
↓
&lt;body&gt;
</code></pre>

<p>スクリプトが全ページで実行されてしまうので、onloadの指定をやめました。</p>

<p>&#8220;`javascript</p>

<script type="text/javascript">
  function initialize() {
    var latlng = new google.maps.LatLng(35.710635, 139.792692);
    var myOptions = {
      zoom: 15,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById("gmap"),myOptions);

    var marker = new google.maps.Marker({
      position: latlng,
      map: map,
      title:"かみなりもん"
    });

    var pageHeight = $(document).height();
    $("#gmap").css("height",pageHeight);
  };
  $('#access').bind('pageshow',initialize);
</script>


<pre><code>
script要素をhtmlコードのgmap下に移動。
pageshowイベントを使用して、accessページのみ実行するように指定しています。

この辺は、こちらのサイトを参考にさせて頂きました。
&lt;a href="http://www.matsuaz.com/4_1/2011/06/18/1308334179361.html" target="_blank"&gt;http://www.matsuaz.com/4_1/2011/06/18/1308334179361.html&lt;/a&gt;

ちなみに
</code></pre>

<p>$(&lsquo;#access&rsquo;).bind(&lsquo;pageshow&rsquo;,initialize);
↓
$(&lsquo;#access&rsquo;).live(&lsquo;pageshow&rsquo;,initialize);
&#8220;`</p>

<p>動的要素なので、bindをliveにすればHead内でも実行できました。</p>
]]></content>
  </entry>
  
</feed>
