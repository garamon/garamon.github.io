<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Code Life]]></title>
  <link href="http://blog.code-life.net/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.code-life.net/"/>
  <updated>2014-05-07T23:03:46+09:00</updated>
  <id>http://blog.code-life.net/</id>
  <author>
    <name><![CDATA[noto]]></name>
    <email><![CDATA[noto.code.life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rbenv使うならこれもいれとけプラグイン4選]]></title>
    <link href="http://blog.code-life.net/blog/2014/05/07/recommended-rbenv-plugin/"/>
    <updated>2014-05-07T22:30:15+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/05/07/recommended-rbenv-plugin</id>
    <content type="html"><![CDATA[<p>複数バージョンのRubyを管理をするツールrbenvですが、rbenvをもう少し便利にしてくれるプラグインを紹介したいと思います。</p>

<h2>ruby-build</h2>

<p><a href="https://github.com/sstephenson/ruby-build">ruby-build</a></p>

<h3>何するプラグイン?</h3>

<p>rubyのコンパイル &amp; インストール</p>

<h3>インストール</h3>

<p><code>
$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
</code></p>

<h2>rbenv-default-gems</h2>

<p><a href="https://github.com/sstephenson/rbenv-default-gems">rbenv-default-gems</a></p>

<h3>何するプラグイン?</h3>

<p>新しくrubyをインストールする際、~/.rbenv/default-gemsに記載してあるgemを自動的にインストールする</p>

<p><code>sh ex) ~/.rbenv/default-gems
bundler
pry
</code></p>

<h3>Installation</h3>

<p><code>sh
$ git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems
</code></p>

<h2>rbenv-gem-rehash</h2>

<p><a href="https://github.com/sstephenson/rbenv-gem-rehash">rbenv-gem-rehash</a></p>

<h3>何するプラグイン?</h3>

<p>gemをインストール or アンインストールした際に自動的にrbenv rehashを行う</p>

<h3>Installation</h3>

<p><code>sh
$ git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash
</code></p>

<h2>rbenv-update</h2>

<p><a href="https://github.com/rkh/rbenv-update">rbenv-update</a></p>

<h3>何するプラグイン?</h3>

<p><code>rbenv update</code>と打てば rbenv &amp; rbenvプラグインをまとめて最新の状態にする</p>

<h3>Installation</h3>

<p><code>sh
$ git clone https://github.com/rkh/rbenv-update.git ~/.rbenv/plugins/rbenv-update
</code></p>

<p>全部<a href="https://github.com/sstephenson/rbenv/wiki/Plugins#approved-plugins">wiki</a>に載ってるんすけどね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Server WEBrickの起動やレスポンス速度が遅い場合の対処法]]></title>
    <link href="http://blog.code-life.net/blog/2014/04/14/rails-server-webrick-is-so-slow/"/>
    <updated>2014-04-14T20:41:27+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/04/14/rails-server-webrick-is-so-slow</id>
    <content type="html"><![CDATA[<p>最近Railsを触っているのだが、いかんせんWebrickの起動やレスポンスが遅い。</p>

<p>世のRubyistはこんな環境で開発しているのか(いやない)ということで調べた。</p>

<h2>環境</h2>

<ul>
<li>Ruby on Rails4</li>
<li>ruby 2.1.1p76</li>
<li>Vagrant 1.5.2</li>
</ul>


<h2>Webrickの設定を見直す</h2>

<p>google先生に伺うと下記の解決方法が多かったがボクの環境では効果が見られなかった。</p>

<p>``` sh
$ gem which webrick
/home/vagrant/.rbenv/versions/2.1.1/lib/ruby/2.1.0/webrick.rb</p>

<p>$ vi /home/vagrant/.rbenv/versions/2.1.1/lib/ruby/2.1.0/webrick/config.rb</p>

<p>:DoNotReverseLookup => nil
↓
:DoNotReverseLookup => true
```</p>

<h2>Vagrant Synced Foldersの設定</h2>

<p>synced_folderを<code>nfs</code> にするとパフォーマンスの向上が期待できると何処かで見た記憶があったので</p>

<p>ドキュメントを覗いてみると <code>rsync</code> がバージョン1.5から利用できるとのこと。
使わない手はないと早速1.5に上げて試してみた。</p>

<p><code>ruby
config.vm.synced_folder "../target", "/share", type: "rsync"
</code></p>

<p>初回起動時は立ち上がるまで若干時間がかかったが、それ以降は遅いとは感じない。</p>

<p>肝心のWebrickのレスポンス速度は劇的に上がった。今までと比べると爆速。</p>

<h3>注意点</h3>

<p>ホストOS側で変更した点がゲストOSに反映されない。
rsyncを利用する場合は <code>rsync</code> または <code>rsync-auto</code> を実行する必要がある。</p>

<p><code>
$ vagrant up
$ vagrant rsync #１度きりの同期
or
$ vagrant rsync-auto #監視して変更があれば同期 若干タイムラグがある。
</code></p>

<h2>結局は&hellip;</h2>

<p>rsyncで少し利用してみたが、同期のラグが気になった。
変更してすぐに確認できないことがあるのでこの辺はストレスに感じる。</p>

<p>また同期は一方方向 ホスト→ ゲストの為、仮想マシン上でコマンドを打ってファイルを作成しても
ホストには反映されない。</p>

<p>自分はゲストからコマンドを打つことが多いので困った点だった。
こういった点はこれから改善されるのだと思う。</p>

<p>ということでパフォーマンス的に問題がなかったので <code>nfs</code> に変更して開発している。</p>

<hr />

<p>追記 2014/04/15</p>

<h2>参考</h2>

<p><a href="https://www.vagrantup.com/blog/feature-preview-vagrant-1-5-rsync.html">Feature Preview: Rsync Synced Folders</a></p>

<p><a href="http://docs.vagrantup.com/v2/getting-started/synced_folders.html">Synced Folders</a></p>
]]></content>
  </entry>
  
</feed>
