<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vagrant | Code Life]]></title>
  <link href="http://blog.code-life.net/blog/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://blog.code-life.net/"/>
  <updated>2014-03-03T21:57:48+09:00</updated>
  <id>http://blog.code-life.net/</id>
  <author>
    <name><![CDATA[noto]]></name>
    <email><![CDATA[noto.code.life@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vagrantのコマンドを補完する]]></title>
    <link href="http://blog.code-life.net/blog/2014/02/07/install-vagrant-bash-completion-on-mac/"/>
    <updated>2014-02-07T11:19:47+09:00</updated>
    <id>http://blog.code-life.net/blog/2014/02/07/install-vagrant-bash-completion-on-mac</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/kura/vagrant-bash-completion">vagrant-bash-completion</a>なるものを発見したのでインストールした。</p>

<h2>環境</h2>

<ul>
<li>Mac OS X 10.9.1</li>
<li>Vagrant 1.4.3</li>
</ul>


<h2>Installation</h2>

<p><code>sh
$ brew tap homebrew/completions
$ brew install vagrant-completion
</code></p>

<p>~/.bashrcに以下を追加して反映</p>

<p><code>sh
if [ -f `brew --prefix`/etc/bash_completion.d/vagrant ]; then
  source `brew --prefix`/etc/bash_completion.d/vagrant
fi
</code></p>

<p>Vagrantコマンド・サブコマンドの補完が行われて幸福度が少し上がる。</p>

<h2>参考</h2>

<p><a href="https://github.com/kura/vagrant-bash-completion">vagrant-bash-completion</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Vagrant]パブリックネットワークの設定]]></title>
    <link href="http://blog.code-life.net/blog/2013/12/01/vagrant-configure-public-network/"/>
    <updated>2013-12-01T15:39:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/12/01/vagrant-configure-public-network</id>
    <content type="html"><![CDATA[<p>Vagrantでパブリックネットワークの設定をしようとしたところ、若干ハマったのでメモ。</p>

<h2>環境</h2>

<ul>
<li>Vagrant 1.3.2</li>
</ul>


<h2>Public Network</h2>

<p><a href="http://docs.vagrantup.com/v2/networking/public_network.html">公式のドキュメント</a>通りに設定し、vagrant reload すれば設定が反映されます。</p>

<p><code>ruby
config.vm.network :public_network,  :bridge =&gt; 'en1: Wi-Fi (AirPort)'
</code></p>

<h2>Xdubug</h2>

<p>public networkで起動したらサイトがクソ重くなる&hellip;</p>

<p>色々調べたところ <a href="https://github.com/10up/varying-vagrant-vagrants/wiki/Configure-for-a-Public-Network">Configure for a Public-Network</a> に記載されてる方法で解決することができました。</p>

<h3>xdubug.ini</h3>

<p>xdubug.ini もしくは php.iniに以下の一文を追加</p>

<p><code>sh
xdebug.remote_connect_back = 1
</code></p>

<p>Xdebug使ってる人は要注意です。</p>

<h2>参考</h2>

<p><a href="https://github.com/10up/varying-vagrant-vagrants/wiki/Configure-for-a-Public-Network">Configure for a Public-Network</a></p>

<p><a href="http://stackoverflow.com/questions/18241065/auto-setting-xdebug-remote-host-ip-address-with-vagrant-puppet">Auto setting xdebug.remote_host ip address with vagrant/puppet</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Vagrant]共有ディレクトリのマウントが失敗する]]></title>
    <link href="http://blog.code-life.net/blog/2013/09/26/vagrant-mounting-failed/"/>
    <updated>2013-09-26T22:58:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/09/26/vagrant-mounting-failed</id>
    <content type="html"><![CDATA[<h2>環境</h2>

<ul>
<li><p>HOST</p>

<ul>
<li>Mac OS X 10.8</li>
<li>Vagrant 1.3.2</li>
<li>Virtual Box 4.2.18</li>
<li>ruby 1.9.3p392</li>
</ul>
</li>
<li><p>GUEST</p>

<ul>
<li>CentOS 6.3 minimal</li>
</ul>
</li>
</ul>


<h2>エラー内容</h2>

<p>vagrantから新規仮想マシンを作成し、ホストOSとゲストOSの共有ディレクトリの設定後、起動させたところ
下記のエラーが出力された。</p>

<p>``` sh
The following SSH command responded with a non-zero exit status.
Vagrant assumes that this means the command failed!</p>

<p>mount -t vboxsf -o uid=<code>id -u vagrant</code>,gid=<code>getent group vagrant | cut -d: -f3</code> /share /share</p>

<p>Stdout from the command:</p>

<p>Stderr from the command:</p>

<p>/sbin/mount.vboxsf: mounting failed with the error: No such device
```</p>

<p>Guest additionsが正常にインストールされていないようなので /var/log/vboxadd-install.log を確認する。</p>

<p>```
test -e include/linux/autoconf.h -a -e include/config/auto.conf || (            \</p>

<pre><code>    echo;                                                           \
    echo "  ERROR: Kernel configuration is invalid.";               \
    echo "         include/linux/autoconf.h or include/config/auto.conf are missing.";      \
    echo "         Run 'make oldconfig &amp;&amp; make prepare' on kernel src to fix it.";  \
    echo;                                                           \
    /bin/false)
</code></pre>

<p>```</p>

<p>automake, autoconf がインストールされてない&hellip;</p>

<p><code>sh
$ sudo yum install automake autoconf
</code></p>

<h2>Guest additionsの再インストール</h2>

<p>ログアウト後</p>

<p><code>sh
$ vagrant vbguest --do install # requier vagrant-vbguest
$ vagrant reload
</code></p>

<p>これで共有設定が反映される。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant1.2.2から1.3.2にあげたらvagrant-vbguestが動作しない]]></title>
    <link href="http://blog.code-life.net/blog/2013/09/18/vagrant-vbguest-update/"/>
    <updated>2013-09-18T21:57:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/09/18/vagrant-vbguest-update</id>
    <content type="html"><![CDATA[<p>久しぶりに<a href="http://www.vagrantup.com/">Vagrant</a>を触ったついでにupdateした結果 <a href="https://github.com/dotless-de/vagrant-vbguest">vagrant-vbguest</a>がエラー吐く。</p>

<p>エラー吐くどころかvagrant upもできない始末。
<a href="https://github.com/dotless-de/vagrant-vbguest">vagrant-vbguest</a>自身もupdateしていたので反映させてみました。</p>

<h2>環境</h2>

<ul>
<li>Mac OS X 10.8</li>
<li>Vagrant 1.3.2</li>
<li>Virtual Box 4.2.18</li>
<li>ruby 1.9.3p392</li>
</ul>


<h2>エラー内容</h2>

<p><code> sh
/Users/noto/.vagrant.d/gems/gems/vagrant-vbguest-0.8.0/lib/vagrant-vbguest/vagrant_compat.rb:7:in `&lt;top (required)&gt;': undefined method `[]' for nil:NilClass (NoMethodError)
</code></p>

<h2>Global Configuration</h2>

<p><a href="http://blog.code-life.net/blog/2013/06/10/the-guest-additions-on-this-vm-do-not-match-the-installed-version-of-virtualbox-on-vagrant/">以前</a>設定したグローバルの設定をコメントアウト</p>

<p><code>sh
$ vi ~/.vagrant.d/Vagrantfile
</code></p>

<p>``` ruby</p>

<h1>Vagrant.configure(&ldquo;2&rdquo;) do |config|</h1>

<h1>require &lsquo;vagrant-vbguest&rsquo; unless defined? config.vbguest</h1>

<h1>config.vbguest.auto_update = false</h1>

<h1>end</h1>

<p>```</p>

<h2>Update vagrant-vbguest</h2>

<p>さくっと一発</p>

<p><code>sh
$ vagrant plugin update vagrant-vbguest
</code></p>

<h2>Global Configuration再び</h2>

<p>updateが完了したら、globalの設定のコメントを外します。これでエラーの出力がなくなるはずです。</p>

<p>ちなみに<a href="https://github.com/dotless-de/vagrant-vbguest/blob/master/Readme.md">README</a>に記載されてる設定では以前と同様にエラーになりました。</p>

<h3>エラーの内容はこちら</h3>

<p>``` sh
Vagrant failed to initialize at a very early stage:</p>

<p>There was an error loading a Vagrantfile. The file being loaded
and the error message are shown below. This is usually caused by
a syntax error.</p>

<p>Path: /Users/noto/.vagrant.d/Vagrantfile
Message: uninitialized constant VagrantVbguest::Config
```</p>

<p><a href="https://github.com/dotless-de/vagrant-vbguest/issues/73">uninitialized constant VagrantVbguest::Config when using global configuration</a>でも同じこと言われてます。</p>

<h2>Guest Additionsのバージョン確認</h2>

<p><code>sh
$ vagrant up # 起動させていないなら
$ vagrant vbguest --status
GuestAdditions versions on your host (4.2.18) and guest (4.2.12) do not match.
</code></p>

<h2>Update Guestadditions</h2>

<p><code>sh
$ vagrant up # 起動させていないなら
$ vagrant vbguest --do install
</code></p>

<p>設定すべて外してstatusとdoコマンド利用すればいいんじゃないかなと思ってきました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Vagrant] 仮想マシンのスナップショットとるならvagrant-vbox-snapshotが便利]]></title>
    <link href="http://blog.code-life.net/blog/2013/06/12/vagrant-vbox-snapshot/"/>
    <updated>2013-06-12T21:25:00+09:00</updated>
    <id>http://blog.code-life.net/blog/2013/06/12/vagrant-vbox-snapshot</id>
    <content type="html"><![CDATA[<p>vagrant1.2で仮想マシンのスナップショットをとりたかったので調べたところ <a href="https://github.com/dergachev/vagrant-vbox-snapshot">vagrant-vbox-snapshot</a>なるものが公開されていたのでインストールしてみました。</p>

<p>似たプラグインで<a href="https://github.com/ryuzee/sahara">sahara</a>がありますが、sandboxモードで動作させることができるプラグインのようでスナップショットをとる機能はないようです。
google先生に伺ってもsaharaの記事は多くヒットするのですが、vagrant-vbox-snapshotはあまりヒットしないのは需要がないんですかね。</p>

<h2>環境</h2>

<ul>
<li>Mac OS X 10.8</li>
<li>Vagrant 1.2.2</li>
<li>Virtual Box 4.2.12</li>
</ul>


<h2>Requirements</h2>

<ul>
<li>Vagrant 1.1+</li>
</ul>


<h2>インストール</h2>

<p>さくっとインスト</p>

<p><code>sh
$ vagrant plugin install vagrant-vbox-snapshot
</code></p>

<h2>使い方</h2>

<p><a href="https://github.com/dergachev/vagrant-vbox-snapshot/blob/master/README.md">README</a> に書いてあるまんまですが。</p>

<h2>スナップショットの作成</h2>

<p>スナップショット名を指定して作成します。</p>

<p><code>sh
$ vagrant snapshot take [NAME]
</code></p>

<h2>スナップショットの一覧</h2>

<p><code>sh
$ vagrant snapshot list
</code></p>

<h3>出力結果</h3>

<p>複数のスナップショットをとっている場合、以下のように出力されます。</p>

<p>``` sh
   Name: init (UUID: c45af534-e64a-409e-95f7-1a7ef697f7cc)</p>

<pre><code>  Name: before-AMP (UUID: 97dfc94b-f0ba-45b9-9bc4-c43c8b251d22) *
</code></pre>

<p>```</p>

<h2>スナップショットに復元</h2>

<p>指定した名前のスナップショットに復元します。</p>

<p><code>sh
$ vagrant snapshot go [NAME]
</code></p>

<h2>直前のスナップショットに復元</h2>

<p><code>sh
$ vagrant snapshot back
</code></p>

<h2>スナップショットの削除</h2>

<p>指定した名前のスナップショットを削除します。</p>

<p><code>sh
$ vagrant snapshot delete [NAME]
</code></p>

<p>ひと通りコマンドを試してみましたが問題なく動作しています。</p>

<p>Vagrant便利っすね。</p>

<h2>参考</h2>

<p><a href="https://github.com/dergachev/vagrant-vbox-snapshot#vagrant-vbox-snapshot">vagrant-vbox-snapshot</a></p>
]]></content>
  </entry>
  
</feed>
